#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey       = <mode> '<' <action> | <action>
#
#                       mode         = 'name of mode' | <mode> ',' <mode>
#
#                       action       = <keysym> '[' <proc_map_lst> ']' | <keysym> '->' '[' <proc_map_lst> ']'
#                                      <keysym> ':' <command>          | <keysym> '->' ':' <command>
#                                      <keysym> ';' <mode>             | <keysym> '->' ';' <mode>
#
#                       keysym       = <mod> '-' <key> | <key>
#
#                       mod          = 'modifier keyword' | <mod> '+' <mod>
#
#                       key          = <literal> | <keycode>
#
#                       literal      = 'single letter or built-in keyword'
#
#                       keycode      = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       proc_map_lst = * <proc_map>
#
#                       proc_map     = <string> ':' <command> | <string>     '~' |
#                                      '*'      ':' <command> | '*'          '~'
#
#                       string       = '"' 'sequence of characters' '"'
#
#                       command      = command is executed through '$SHELL -c' and
#                                      follows valid shell syntax. if the $SHELL environment
#                                      variable is not set, it will default to '/bin/bash'.
#                                      when bash is used, the ';' delimeter can be specified
#                                      to chain commands.
#
#                                      to allow a command to extend into multiple lines,
#                                      prepend '\' at the end of the previous line.
#
#                                      an EOL character signifies the end of the bind.
#
#                       ->           = keypress is not consumed by skhd
#
#                       *            = matches every application not specified in <proc_map_lst>
#
#                       ~            = application is unbound and keypress is forwarded per usual, when specified in a <proc_map>
#
#  NOTE(koekeishiya): A mode is declared according to the following rules:
#
#                       mode_decl = '::' <name> '@' ':' <command> | '::' <name> ':' <command> |
#                                   '::' <name> '@'               | '::' <name>
#
#                       name      = desired name for this mode,
#
#                       @         = capture keypresses regardless of being bound to an action
#
#                       command   = command is executed through '$SHELL -c' and
#                                   follows valid shell syntax. if the $SHELL environment
#                                   variable is not set, it will default to '/bin/bash'.
#                                   when bash is used, the ';' delimeter can be specified
#                                   to chain commands.
#
#                                   to allow a command to extend into multiple lines,
#                                   prepend '\' at the end of the previous line.
#
#                                   an EOL character signifies the end of the bind.



# open terminal, blazingly fast compared to iTerm/Hyper
cmd + shift - return : ~/.local/bin/float_term t &> /dev/null 
cmd - return : ~/.local/bin/float_term f &> /dev/null
# open neovim
cmd + shift - e : open -a Neovide --args --multigrid --frame Buttonless -- +cd /Users/me/Projects
# open firefox
cmd + shift - b : open -a Firefox

cmd - 1 : yabai -m space --focus 1 || yabai -m space --focus recent
cmd - 2 : yabai -m space --focus 2 || yabai -m space --focus recent
cmd - 3 : yabai -m space --focus 3 || yabai -m space --focus recent
cmd - 4 : yabai -m space --focus 4 || yabai -m space --focus recent
cmd - 5 : yabai -m space --focus 5 || yabai -m space --focus recent

cmd + shift - 1 : yabai -m window --space 1 && yabai -m space --focus 1
cmd + shift - 2 : yabai -m window --space 2 && yabai -m space --focus 2
cmd + shift - 3 : yabai -m window --space 3 && yabai -m space --focus 3
cmd + shift - 4 : yabai -m window --space 4 && yabai -m space --focus 4
cmd + shift - 5 : yabai -m window --space 5 && yabai -m space --focus 5
cmd + ctrl - 1 : yabai -m window --space 1
cmd + ctrl - 2 : yabai -m window --space 2
cmd + ctrl - 3 : yabai -m window --space 3
cmd + ctrl - 4 : yabai -m window --space 4
cmd + ctrl - 5 : yabai -m window --space 5


cmd - j : yabai -m window --focus next || yabai -m window --focus first
cmd - k : yabai -m window --focus prev || yabai -m window --focus last

# cmd + shift - j : yabai -m window --warp next || yabai -m window --warp first
# cmd + shift - k : yabai -m window --warp prev || yabai -m window --warp last

cmd + shift - j : yabai -m window --swap next || yabai -m window --swap first
cmd + shift - k : yabai -m window --swap prev || yabai -m window --swap last

cmd - f : yabai -m window --toggle float
cmd - m : yabai -m window --toggle zoom-fullscreen

