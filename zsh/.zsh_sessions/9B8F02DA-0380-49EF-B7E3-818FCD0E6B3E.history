nvim ~/.config/zsh/site_functions/_port_aliases
exit
nvim ~/.config/zsh/site_functions/_port_aliases
q
nvim ~/.config/zsh/site_functions/_port_aliases
q
p_up
nvim ~/.config/zsh/site_functions/_port_aliases
q
top
tops
top -CRXz
top -CRSz
top -FRS
top -F -R -S
qutebrowser
p_up
p_add qt5-qtwebengine
p_add qutebrowser
c
rm -rfv /Applications/qutebrowser.app
rm Downloads/qutebrowser-2.5.1.dmg
c
p_add qutebrowser
sudo port load dbus
sudo port install ffmpeg +nonfree
sudo port install ffmpeg+nonfree
sudo port install ffmpeg +nonfree
clear
ls
ranger
ln -sv /opt/local/Library/Frameworks/Python.framework/Versions/3.10/bin/qutebrowser /Applications/qutebrowser.app/Contents/MacOS/
ranger
ranger
p_add pass
gpg-agent
gpg-connect-agent reload /bye
gpgconf --apply-defaults
gpg-connect-agent reload /bye
gpg-connect-agent reloadagent /bye
clear
nvim .gnupg/gpg-agent.conf
q
q
chflags nohidden ~/Library
l
ls
defaults write com.apple.finder AppleShowAllFile
defaults write com.apple.finder AppleShowAllFile YES
defaults write com.apple.finder ShowPathbar -bool true
defaults write com.apple.finder ShowStatusBar -bool true\

pass init --path $XDG_DATA_HOME/share
ls
l
htop
top
go clean lf
go clean -i lf
go clean -l lf
go help cleanb
go help clean
man gpg
sudo port install dmenu
dmenu
cd Desktop
gpg -ec -r 'Christian Dickerson' Passwords.csv
gpg
gpg --full-gen-key --expert
p_add pinentry-mac
p_add pinentry
pinentry
c
nvim ~/.gnupg/gpg-agent.conf
gpg-connect-agent reloadagent /bye
gpg-connect-agent updatestartuptty /bye
pinentry
cd /opt/local/bin
ls
l pinentry
sudo ln -sv /Applications/MacPorts/pinentry-mac.app/Contents/MacOS/pinentry-mac /opt/local/bin/pinentry
sudo ln -sfv /Applications/MacPorts/pinentry-mac.app/Contents/MacOS/pinentry-mac /opt/local/bin/pinentry
gpg-connect-agent updatestartuptty /bye
pinentry
gpg --full-gen-key --expert
spctl --help
man spotlighthelper 
ranger
ls
cd .local/share
cd nvim
ls
rangee
ranger
ls
q
ranger
q
cd .config/kitty
nvim
nvim
q
ranger
pip3 install PIL
pip3 install pil
pip3 install pillow
p_up
pip3 pynvim
pip3 neovim
pip3 install pynvim
pip3 install neovim
clear
p_add composer gnused
p_add gsed
p_add luarocks
p_add lua-rocks
p_add lua-luarocks
p_set luarocks lua53-luarocks
p_set python3 python310
sudo port select --list
sudo port select --list python
sudo port select --list python3
sudo port select --summary
p_set clang mp-clang-14
p_set llvm mp-llvm-14
p_set postgresql postgesql14
p_set postgresql postgresql14
sudo port select --summary
clear
p_add mariadb-10.9-server
sudo -u _mysql /opt/local/lib/mariadb-10.9/bin/mysql_install_db
ls
sudo su _mysql
clear
sudo -u _mysql
sudo -u root su -l _mysql
sudo su
c
q
ranger
pip3 install pillow
pip3 install PIL
pip3 install -U
pip3 install -U all
pip3 check
pip3 list
/Applications/Xcode.app/Contents/Developer/usr/bin/python3 -m pip install --upgrade pip
pip3 uninstall greenlet
pip3 uninstall msgpack neovim Pillow pip pynvim setuptools six wheel
ls
pip3 list
p_add py-pip
p_set pip pip310
p_set pip3 pip310
q
pip uninstall wheel 
ranger
pip install wheel
ranger
pip uninstall wheel 
ranger
q
pip
pip list
pip install neovim
pip uninstall --help
pip uninstall neovim
pip uninstall greenlet
pip uninstall msgpack pynvim
pip install wheels
pip install wheel
nvim .zshenv
q
pip install wheel
pip3 install wheel
pip install neovim
clear
nvm
nvim
p_add stylua
npm --location=global install yarn
sudo npm --location=global install yarn
q
yarn global add black
nvim
nvim
ranger
nvim
nvim
nvim
nvim
q
yarn global bin
q
nvim .qutebrowser/config.py
nvim .qutebrowser/config.py
nvim .qutebrowser/config.py
ranger
fc-list : family
yarn global add eslint
yarn global add prettier
nvim
nvim
nvim
q
ls
printenv
yarn
ls
rm -rf node_modules yarn.lock
l
rm .profile
l
ranger
ranger
q
nvim ~/.config/zsh/.zshenv
q
q
r --help
r
r --help
man r
r
man r
q
yarn
rm -rf node_modules yarn.lock
ls
l
nvim ~/.config/zsh/site_functions/_common_aliases
l
q
f
e
nvim ~/.config/zsh/.zshrc
nvim ~/.config/zsh/.zshenv
q
q
nvim ~/.config/zsh/.zshenv
pip uninstall qutebrowser
sudo pip uninstall qutebrowser
c
pip uninstall qutebrowser
pip list
p_add qutebrowser
qutebrowser
q
r
nvim ~/.config/zsh/.zshenv
f
e
e
e
e
qutebrowser
gpg-connect-agent updatestartuptty /bye
p_rm qutebrowser
q
f
q
sudo xattr -rd com.apple.quarantine /Applications/qutebrowser.app
e
r
e
f
q
cd .config/nvim
ls
l
ls
clear
exit
l
printenv
q
l
nvim ~/.config/zsh/site_functions/_common_aliases
l
q
l
cd .config/nvim
l
cd .git
ls
nvim config
git status
cd ..
git status
git branch --unset-upstream
git status
git remote show
git remote show beef
git remote rm beef
clear
git remote show
git remote add git@github.com/sorbetofbeef/nvim
git remote add forked git@github.com/sorbetofbeef/nvim
git remote set-branches forked myconf
git fetch
ls
git push
git push --set-upstream beef myconf
gh --help
gh completion --jelp
gh completion -s zsh >> ~/.config/zsh/site_functions/_gh
nvim ~/.config/zsh/.zshrc
gh auth status
gh auth setup-git --help
gh auth setup-git
ls
l
nvim .gitconfig
cd .config/nvim
git push --set-upstream beef myconf
cd ..
q
r
q
python --version
q
cd .config/nvim
ls
l
nvim .git/config
git push --set-upstream forked myconf
gh repo edit
gh status
gh status --help
gh repo sync --branch myconf
clear
git branch master
git switch master
git stash 
ls
l
nvim
gh repo fork
ls
cd ..
gh repo clone nvim-1
ls
cd nvim-1
ls
gh repo view
cd ../nvim
git repo view
gh repo view
clear
cd ../nvim-1
gh repo view
git remote show
git pull --all
git branch --list
git remote show upstream
git branch --remotes
cp -vr ../nvim/* ./
git status
git diff
git pull --all
git merge upstream/master
git pull upstream master
git pull --j
git add .
git commit -m "myconf"
git push
git merge upstream/master
cd ..
gh repo delete nvim-1
gh auth refresh -h github.com -s delete_repo
cd nvim
git pull
git switch myconf
gh repo view
git switch myconf
gh repo sync
gh repo list
cd ../nvim-1
nvim .git/config
cd ..
cd nvim
git status
git pull
git switch master
nvim .git/config
git status
git pull --all
git switch master
git branch --remotes
cd ..
rm -rf nvim*
ls
gh repo delete nvim-1
gh repo clone nvim
cd nvim
ls
cd ..
rm -rfv nvim/.git{,hub}
ls
l
mv nvim nvim.bak
gh repo fork ChristianChiarulli/nvim
gh repo rename --help
cd nvim-1
clear
ls
nvim .git/config
ls
cd ..
mv nvim-1 nvim
nvim
nvim
nvim
nvim
e
q
cd .qutebrowser
cat config.py.bak >> config.py
q
ls
clear
e
q
f
p_add unzip
cd /Applications/qutebrowser.app
ls
l
cd Contents/Resources
ls
unzip base_library.zip
ls
ls
l
ranger
cd
ls
l
p_add qutebrowser
qute
q
qutebrowser
cd /opt/local/bin
ls
ranger
p_add htop
htop
p_add neomutt
gh repo clone dotfiles
cd dotfiles
cp -rv neomutt ~/.config/neomutt
f
pass init --path $XDG_DATA_HOME/share
gpg-connect-agent updatestartuptty /bye
gpg-connect-agent reloadagent /bye
gpg --full-gen-key --expert
pinentry
nvim .gnupg/gpg-agent.conf
nvim
nvim
e
e
e
e
q
/opt/local/Library/Frameworks/Python.framework/Versions/3.10/bin/qutebrowser ; exit;
run-help 3C
clear
/Applications/MacPorts/pinentry-mac.app/Contents/MacOS/pinentry-mac ; exit;
nvim
f
p_add py-black
p_set black black310
p_rm pinentry-mac
pinentry
open /Applications/MacPorts/pinentry-mac.app
open /Applications/MacPorts/pinentry-mac.app/Contents/MacOS/pinentry-mac
nvim .gnupg/gpg-agent.conf
gpg-connect-agent reloadagent /bye
pinentry
f
q
p_add broot
sudo port select --summary
e
e
cd Projects
gh repo list
gh repo clone snake-rust-game.cheater
cd snake-rust-game.cheater
ls
cargo build
cd target/
ls
cd debug
ls
cd .,
cd ..
ls
cd ..
ls
yarn install
yarn start
q
cd Projects/snake-rust-game.cheater
ls
ps
cat package.json
ls
cd server
ls
nvim index.js
cd ..
cd snake-rust-game.cheater
ls
rm yarn.lock
rm -rf node_modules
npm install
cd ww
cd www
npm intall
npm install
npm aduit fix
npm audit fix
npm start &
npm build
npm run build
cd ..
npm run build
npm run start &
cd www
npm run dev
npm run dev
npm run dev &
cd ..
cargo run
cargo --help
f
cd Projects
ls
icat
kitty +icat
kitty +icat ../Pictures/
l
cd ..
l
cd dotfiles
ls
cp lf ~/.config
cp -rv lf ~/.config
nvim ~/.zshenv
lf
q
lf
q
lf
q
q
q
q
q
ls
clear
c
q
lf
nvim ~/.config/lf
nvim ~/.config/lf
clear
q
cd 
cd ~/.config/zsh
nvim
q
q
exit
cd ~/.config/zsh
nvim
q
c
lfcd
ls
printenv
make distclean
make clean
sudo rm -rfv /usr/local/{bin,share,lib}/nvim
make CMAKE_BUILD_TYPE=Release
clear
make clean
make distclean
git pull
git branch
git branch --list
git pull
make CMAKE_BUILD_TYPE=Release
sudo make install
clear
cd 
cd ~/.config/nvim
ls
git pull upstream master
git commit -m "myconf"
git add .
git commit -m "myconf"
git status
git pull upstream master
ls
git diff init.lua
nvim init.lua
git status
git add .
git commit -m "myconf"
git push origin master
clear
git diff
git dif ./
git diff ./
ls
git status
git checkout upstream/master
ls
nvim init.lua
git switch -
nvim init.lua
git status
git add .
git commit -m "myconf"
git push
nvim
nvim
nvim
lf
lfcd
q
nvim
kitty +edit-config
printenv
nvim .zshenv
q
ranger
gpg-connect-agent reloadagent /bye
gpg --full-gen-key --expert
pinentry
/Applications/MacPorts/pinentry-mac.app/Contents/MacOS/pinentry-mac
sudo ln -sfv /Applications/MacPorts/pinentry-mac.app/Contents/MacOS/pinentry-mac /opt/local/bin/pinentry
pinentry
pinentry
gpg-connect-agent reloadagent /bye
pinentry
nvim .gnupg/gpg-agent.conf
ranger
nvim .zshenv
nvim $ZDOTDIR/.zshrc
q
ls
l
kitty list-fonts
q
ls
cd Projects
cd snake-game
ls
rustup help
q
rustup help
rustup help completion
rustup help completions
q
rustup completions zsh > $ZDOTDIR/site_functions/_rustup
cargo help completions
cargo help completion
cargo help
rustup help completions
rustup completions zsh cargo > $ZDOTDIR/site_functions/_cargo
q
ls
kitty list-fonts
kitty +edit-config
kitty +edit-config
q
cd Projects/snake-game
cargo init ./
ls
l
git status
nvim .git/config
nvim ~/.gnupg/gpg-agent.conf
sudo ln -sfv /opt/local/bin/pinentry-curses /opt/local/bin/pinentry
gpg-connect-agent reloadagent /bye
pinentry
gpg --full-gen-key --expert
nvim
nvim
broot
q
q
br
lf
f
lfcd
sudo rm -rfv /usr/local/{bin,share,lib}/nvim
git pull
make CMAKE_BUILD_TYPE=Release
make clean
make distclean
make clean
git pull
make CMAKE_BUILD_TYPE=Release
sudo make install
clear
cd ~/.config/nvim
git status
git add .
git commit -m "myconf"
git pull upstream master
nvim lua/user/plugins.lua
nvim init.lua
git add .
git commit -m "myconf"
git pus
git push
nvim
nvim
nvim
q
nvim
q
git clone https://github.com/neovide/neovide
cd neovide
cargo build --release
cp ./target/release/neovide ~/.local/bin/
cargo install cargo-bundle
cargo bundle --release
cp ./target/release/bundle/osx/Neovide.app /Applications
cp -rv ./target/release/bundle/osx/Neovide.app /Applications
nvim ~/.config/nvim/lua/user/options.lua
neovide
f
yarn global add emmet-ls
e
nvim
cd .config/nvim
git add .
git commit -m "myconf"
git push
git pull upstream master
git --help rebase
git --help merge
clear
git config --global pull.rebase true
e
q
gpg-connect-agent reloadagent /bye
pass init --path $XDG_DATA_HOME/share
pass init --path $XDG_DATA_HOME/share 9CE007769A80EEA3D93CEDB8207E9F59B178F7D6
pass init 0E15B99E3638F7B84C79A9C182C7A0502F51EFB1
ls
l
pass insert
pass insert live.com/christian.dickerson@outlook.com
pass insert live.com/christian.dickerson@outlook.com
pass show live.com/christian.dickerson@outlook.com
nvim ~/.config/neomutt/accounts/main
neomutt
neovide --multigrid
padd mercurial
pup
pup
pup --help
nvim ~/.config/zsh/functions
q
ls
f
q
pup
mkdir -pv /opt/local/var/db/postgresql14/defaultdb
sudo mkdir -pv /opt/local/var/db/postgresql14/defaultdb
sudo chown -v postgres:postgres /opt/local/var/db/postgresql14/defaultdb
sudo su postgres -c 'cd /opt/local/var/db/postgresql14 && /opt/local/lib/postgresql14/bin/initdb -D /opt/local/var/db/postgresql/defaultdb'
sudo su postgres -c 'cd /opt/local/var/db/postgresql14 && /opt/local/lib/postgresql14/bin/initdb -D /opt/local/var/db/postgresql14/defaultdb'
/opt/local/lib/postgresql14/bin/pg_ctl -D /opt/local/var/db/postgresql14/defaultdb -l logfile start
sudo postgres /opt/local/lib/postgresql14/bin/pg_ctl -D /opt/local/var/db/postgresql14/defaultdb -l logfile start
sudo -u postgres /opt/local/lib/postgresql14/bin/pg_ctl -D /opt/local/var/db/postgresql14/defaultdb -l logfile start
sudo port load postgresql14-server
pg_ctl
pg_ctl --help
padd mycli
mycli --help
mycli
sudo port load
man port
port list
port list installed
port installed
psel
port load
sudo port info postgresql14-server
pg_ctl
pg_ctl --help
pg_ctl status
pg_ctl status /opt/local/var/db/postgresql14/defaultdb
pg_ctl status -D /opt/local/var/db/postgresql14/defaultdb
sudo pg_ctl status -D /opt/local/var/db/postgresql14/defaultdb
su postgres
sudo su postgres
padd pgcli
pgcli
sudo -u postgres pgcli
sudo pgcli
sudo su -u postgres pgcli
sudo su postgres pgcli
sudo su postgres /opt/local/bin/pgcli
ls
sudo port unload postgresql
sudo port unload postgresql14-server
pgcli
pg_ctl start -D /opt/local/var/db/postgresql14/defaultdb
sudo postgres pg_ctl start -D /opt/local/var/db/postgresql14/defaultdb
sudo -u postgres pg_ctl start -D /opt/local/var/db/postgresql14/defaultdb
sudo -u postgres /opt/local/bin/pg_ctl start -D /opt/local/var/db/postgresql14/defaultdb
padd postgres
padd postgresql-14
padd postgresql14
f
cd /opt/local/
ls
cd var
ls
cd fb
cd db
ls
su postgres
sudo su postgres
q
cd ~/Desktop
mkdir {active,abandoned,completed}
ls
q
cd Projects/datafiles
ls
cd bin
ls
cd scripts
ls
nvim pass.sh
nvim todo.sh
./todo.sh
nvim todo.sh
./todo.sh
nvim todo.sh
./todo.sh
cargo install bat
./todo.sh
nvim todo.sh
./todo.sh
ls
nvim mail.sh
f
cd ~/Desktop
l
cd active
ls
nvim 10-06.22-Setup_stuff.todo
l
ls
cd ..
ls
nvim completed
ls abandoned
ls active/
ls abandoned
bat abandoned/10-06.22-
bat abandoned/10-06.22-Setup_stuff.todo
clear
cat abandoned/10-06.22-Setup_stuff.todo
ls
make distclean clean 
ls
git pull
git status
git restore man/Makefile
git pull
git switch release-0.7
git pull
ls
sudo rm -rfv /usr/local/{bin,share,lib}/nvim
clear
make CMAKE_BUILD_TYPE=Release
ls
clear
sudo make install
cd
mv ~/.config/nvim ~/.config/nvim.bak-2
git clone https://github.com/LunarVim/nvim-basic-ide.git ~/.config/nvim
cd .config/nvim
ls
rm -rfv ~/.local/share/nvim/*
ls ~/.cache/
ls ~/.cache/nvim
rm -rfv ~/.cache/nvim/*
c
nvim
nvim
clear
q
q
a
printenv
q
cd
ls
kitty +edit-config
q
sudo xattr -rd com.apple.quarantine /Applications/qutebrowser.app
qutebrowser
q
cp ~/Projects/datafiles/bin/scripts ./.local/bin
cp -rv ~/Projects/datafiles/bin/scripts ./.local/bin
cd .local
lfcd
./todo.sh
cd
ls
lf
cd .local/bin/scripts
nvim todo.sh
./todo.sh
man bash
nvim todo.sh
nvim todo.sh
./todo.sh
cd ..
f
prm qutebrowser
ls
l
cd
ls
q
q
cd ~/.qutebrowser/
ls
nvim config.py
q
mv -v ~/.qutebrowser/*.py Library/Application\ Support/qutebrowser
rm -rf .qutebrowser
ls
mv neovide dotfiles Projects
ls
ls workspace
neomutt
cler
clear
ls
q
padd py310-flake8
pset pycodestyle pycodestyle-py310
pset flake8 flake8-310
pset pyflakes py310-pyflakes
q
cd ~/Library/Application\ Support/qutebrowser/
ls
l
nvim config.py
nvim config.py
nvim config.py
q
cd Projects
ls
cd dotfiles
s
ks
ls
cp starship.toml ~/.config
cd zsh
f
q
nvim .config/zsh/functions/heading
q
f
sudo tar -xf qutebrowser-2.5.1.tar.gz
ls
cd qutebrowser-2.5.1
ls
l
cd misc
ls
cd userscripts
l
nvim qute-pass
q
lfcd
sk
cd /
sk qute
sk
ls
cd Applications/qutebrowser.app/Contents/
ls
f
q
/Applications/Neovide.app/Contents/MacOS/neovide ; exit;
/Applications/Neovide.app/Contents/MacOS/neovide ; exit;
/Applications/Neovide.app/Contents/MacOS/neovide ; exit;
/Applications/Neovide.app/Contents/MacOS/neovide ; exit;
/Applications/Neovide.app/Contents/MacOS/neovide ; exit;
sudo dscl . -delete /Users/macports
sudo dscl . -delete /Groups/macports
sudo rm -rf \\
    /opt/local \\
    /Applications/DarwinPorts \\
    /Applications/MacPorts \\
    /Library/LaunchDaemons/org.macports.* \\
    /Library/Receipts/DarwinPorts*.pkg \\
    /Library/Receipts/MacPorts*.pkg \\
    /Library/StartupItems/DarwinPortsStartup \\
    /Library/Tcl/darwinports1.0 \\
    /Library/Tcl/macports1.0 \\
    ~/.macports
f
env
nvim ~/.zshenv
vim ~/.zshenv
cd ../usr/
cd share
ls
f
ls
l
f
sudo rm -vrf \\
    /opt/local \\
    /Applications/DarwinPorts \\
    /Applications/MacPorts \\
    /Library/LaunchDaemons/org.macports.* \\
    /Library/Receipts/DarwinPorts*.pkg \\
    /Library/Receipts/MacPorts*.pkg \\
    /Library/StartupItems/DarwinPortsStartup \\
    /Library/Tcl/darwinports1.0 \\
    /Library/Tcl/macports1.0 \\
    ~/.macports
cd ..
sudo rm -vrf \\
    /opt/local \\
    /Applications/DarwinPorts \\
    /Applications/MacPorts \\
    /Library/LaunchDaemons/org.macports.* \\
    /Library/Receipts/DarwinPorts*.pkg \\
    /Library/Receipts/MacPorts*.pkg \\
    /Library/StartupItems/DarwinPortsStartup \\
    /Library/Tcl/darwinports1.0 \\
    /Library/Tcl/macports1.0 \\
    ~/.macports
ls
f
sudo rm -vrf \\
    /opt/local \\
    /Applications/DarwinPorts \\
    /Applications/MacPorts \\
\
    /Library/Receipts/DarwinPorts*.pkg \\
    /Library/Receipts/MacPorts*.pkg \\
    /Library/StartupItems/DarwinPortsStartup \\
    /Library/Tcl/darwinports1.0 \\
    /Library/Tcl/macports1.0 \\
    ~/.macports
sudo rm -vrf \\
    /opt/local \\
    /Applications/DarwinPorts \\
    /Applications/MacPorts \\
\
\
    /Library/Receipts/MacPorts*.pkg \\
    /Library/StartupItems/DarwinPortsStartup \\
    /Library/Tcl/darwinports1.0 \\
    /Library/Tcl/macports1.0 \\
    ~/.macports
sudo rm -vrf \\
    /opt/local \\
    /Applications/DarwinPorts \\
    /Applications/MacPorts \\
\
\
\
    /Library/StartupItems/DarwinPortsStartup \\
    /Library/Tcl/darwinports1.0 \\
    /Library/Tcl/macports1.0 \\
    ~/.macports
sudo rm -vrf \\
    /opt/local \\
    /Applications/DarwinPorts \\
    /Applications/MacPorts \\
    /Library/Tcl/darwinports1.0 \\
    /Library/Tcl/macports1.0 \\
    ~/.macports
sudo rm -vrf \\
    /opt/local \\
    /Applications/DarwinPorts \\
    /Applications/MacPorts \\
    /Library/Tcl/darwinports1.0 \\
    /Library/Tcl/macports1.0 \\
    ~/.macports
ls
f
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> /Users/me/.zprofile\

    eval "$(/opt/homebrew/bin/brew shellenv)"\

f
q
vim ~/.config/zsh/.zshrc
clear
q
brew --help
brew config
cd ~/.local/src/neovi
cd ~/.local/src/neovim
ls
cargo install exa
cargo install-update exa
cargo install install-update
cargo install cargo-update
clear
rustup check
rustup uninstall nightly
rustup uninstall stable
rustup install nightly
clear
rustup set --help
rustup set auto-self-update
rustup set auto-self-update
rustup set auto-self-update disable
rustup set default-host
rustup set default-host --help
rustup self uninstall
ls
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
cargo
rustup set default-host
rustup set default-host aarch64-apple-darwin
rustup install nightlty
rustup install nightly
cargo
cargo listr
cargo list
cargo install --list
cargo install exa
ls
cargo install starship ripgrep fd-find zellij skim bat 
ls
clear
ls
brew install zsh zsh-completions zsh-syntax-hilighting zsh-autosuggestions
brew install zsh zsh-completions zsh-syntax-highlighting zsh-autosuggestions
  chmod -R go-w '/opt/homebrew/share/zsh'\

nvim ~/.config/zsh/.zshenv
vim ~/.config/zsh/.zshenv
env
vim ~/.config/zsh/.zprofile
q
q
exit
cd .config
ls
cd iterm2
ls
cd AppSupport
ls
cd DynamicProfiles
ls
l
ls -lah
cd ..
ls
cd Scripts
ls
cd ..
ls
cd SavedState
ls
q
cd ..
ls
cd ~/Library/Application\ Support/iTerm2
ls
cd iTermServer-3.4.15
ls
cd /Applications/iTerm.app/Contents/
ls
cd Resources
ls
q
exit
nvim ~/.zshenv
vim .zshenv
q
exit
~/.config/zsh/.zshrc
vim ~/.config/zsh/.zshrc
exit
brew install zsh-brew-completions
brew help
brew commands
brew completions 
brew completions --help
brew completions link -v
q
clear
rm -f ~/.zcompdump; compinit
compaudit
chmod -v -R go-w "$(brew --prefix)/share"
clear
q
ls
nvim ~/.config/zsh/.zshrc
vim ~/.config/zsh/.zshrc
rm -rf $ZDOTDIR/.zcompdump
compinit
clear
q
brew install kitty
brew install alacritty
kitty
sudo vim /etc/shells
chsh -s /opt/homebrew/bin/zsh me
q
/Users/me/.config/yabai/yabairc ; exit;
q
ls
chsh -s /bin/zsh me
q
chsh -s /bin/zsh me
q
/Users/me/.local/src/SketchyBar/bin/sketchybar ; exit;
/Users/me/.local/src/SketchyBar/bin/sketchybar ; exit;
/Users/me/Downloads/spacebar-v1.4.0/bin/spacebar ; exit;
/Users/me/.local/src/SketchyBar/bin/sketchybar ; exit;
/Users/me/.local/src/SketchyBar/bin/sketchybar ; exit;
nvim
sudo port install --help
sudo port help
sudo port install neovim +quartz
vim /opt/local/etc/macports/variants.conf
sudo vim /opt/local/etc/macports/variants.conf
q
sudo port install neovim
sudo port install zsh zsh-completions neovim
chsh -s /opt/local/bin/zsh $USER
sudo sh -c 'echo /opt/local/bin/zsh >> /etc/shells'
chsh -s /opt/local/bin/zsh $USER
q
/Users/me/.local/src/SketchyBar/bin/sketchybar ; exit;
ls
kitty
padd kitty
nvim ~/.config/zsh/functions/_port_aliases
q
/Users/me/.local/src/SketchyBar/bin/sketchybar ; exit;
/Users/me/.local/src/SketchyBar/bin/sketchybar ; exit;
/Users/me/.local/src/SketchyBar/bin/sketchybar ; exit;
/Users/me/.local/src/SketchyBar/bin/sketchybar ; exit;
/Users/me/.local/src/SketchyBar/bin/sketchybar ; exit;
/Users/me/.local/src/SketchyBar/bin/sketchybar ; exit;
/Users/me/.local/src/SketchyBar/bin/sketchybar ; exit;
/Users/me/Applications/Swift-DL.app/Contents/MacOS/Swift-DL ; exit;
/Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui ; exit;
/Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm ; exit;
/Applications/MacPorts/rosy-kitty.app/Contents/MacOS/kitty ; exit;
/Users/me/Library/Python/3.10/bin/qutebrowser ; exit;
/Users/me/Downloads/micro-2.0.10/micro ; exit;
