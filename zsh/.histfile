make clean
make distclean
l
ls
bat install-sh
pushd /
sk
f
cd -
cd --
cd 
f
q
f
make clean
make disclean
make distclean
git pull
make CMAKE_BUILD_TYPE=Release
sudo make install
nvim
nvim
nvim
sudo rm -vrf /usr/local/{share,bin,lib}/nvim
clear
ls
sudo make install
q
nvim
rm -rf ~/.local/share/nvim/site
nvim
nvim
nvim
which openssl
whereis openssl
openssl --version
openssl -version
openssl version
mpv --ytdl https://www.trannytube.tv/movies/847501/natalia-la-potra-christian-xxx-purets
mpv Movies/.pron/Digging\ unfathomable\ In\ Aleyda\ butt\ at\ Tranny\ Tube\ TV.mp4
mpv --ytdl https://www.trannytube.tv/movies/1518261/jasmine-lotus-vs-biggest-dildo-solo
q
f
l
git pull
git branch
git fetch --all
git branch
cd ..
cd w3m
./configure --enable-image --with-gc=/opt/homebrew/ --with-ssl
make
sudo make install
w3m https://www.duckduckgo.com/\?q=
w3m https://www.google.com/
w3m www.google.com
docker run -it opensuse/tumbleweed:latest
launchctl --help
launchctl --enable docker
bat /etc/group
bat /etc/group | rg -i me
bat /etc/passwd
bat /etc/passwd | rg -i me
echo $UID
launchctl enable user/501/docker
htop
sudo htop
TERM=xterm-256color sudo launchctl enable user/501/docker
sudo htop
TERM=xterm-256color sudo htop
docker run -it opensuse/tumbleweed:latest
c
clear
ls
l
f
defaults write com.apple.finder QuitMenuItem -bool true
\
for app in "Address Book" "Calendar" "Contacts" "Dock" "Finder" "Mail" "Safari" "SystemUIServer" "iCal"; do\
  killall "${app}" &> /dev/null\
done
nvim 
q
f
todo
d
f
git pull
bat README.md
bat src/main.rs
rm -rf target
cargo build --release
cargo install cargo-bundle
q
f
cargo bundle --release
cp -v target/release/neovide ~/.local/bin/
cp -v target/release/bundle/osx/Neovide.app ~/Applications/
cp -rv target/release/bundle/osx/Neovide.app ~/Applications/
sudo rm -rf /Applications/Neovide.app
cargo install sccache
cd ..
q
sccache --help
sccache --start-server
f
brew install nushell
nu
f
nushell
nu
rm -vrf /usr/local/{share,bin,lib}/nvim
sudo rm -vrf /usr/local/{share,bin,lib}/nvim
ls
git pull
make CMAKE_BUILD_TYPE=Release
sudo make install
clear
nvim
nvim
neovide --multigrid --noidle --nosrgb --nofork --frame None
f
ls
clear
nvim ~/.config/alacritty/alacritty.yml
nvim ~/.config/alacritty/alacritty.yml
q
kitty +edit-config
q
q
q
q
todo
q
nvim ~/.local/bin/todo
nvim ~/.local/bin/todo
todo
nvim ~/.local/bin/todo
todo
f
nvim ~/.local/bin/todo
todo
q
f
br
brew install broot
broot
br --help
c
cd
br
f
kitty --session /Users/me/.config/kitty/sessions/ide.conf 
nvim
kitty --session /Users/me/.config/kitty/sessions/ide.conf 
f
kitty list-fonts
q
q
mpv --ytdl https://trannyvideosxxx.com/transex-pov-paradise-home-alone-with-the-au-pair/
yt-dlp https://trannyvideosxxx.com/transex-pov-paradise-home-alone-with-the-au-pair/
yt-dlp https://trannyvideosxxx.com/transex-pov-paradise-home-alone-with-the-au-pair/
mpv --ytdl https://daftsex.com/watch/-142084321_456239308
alias wp='mpv --ytdl'
wp https://www.shemalestube.com/video/tranny-nurse-andylynn-payne-gets-ass-fucked-hardcore/
yt-dlp https://www.shemalestube.com/video/tranny-nurse-andylynn-payne-gets-ass-fucked-hardcore/
ls
ls Movies
yt-dlp --socket-timeout 69 https://www.shemalestube.com/video/tranny-nurse-andylynn-payne-gets-ass-fucked-hardcore/
rm Movies/tranny-nurse-andylynn-payne-gets-ass-fucked-hardcore.unknown_video
yt-dlp -S "ext" https://www.shemalestube.com/video/tranny-nurse-andylynn-payne-gets-ass-fucked-hardcore/
nvim .config/yt-dlp.conf
yt-dlp https://www.shemalestube.com/video/tranny-nurse-andylynn-payne-gets-ass-fucked-hardcore/
nvim
nvim
nvim
nvim
brew uninstall codelite
brew install vlc
vlc
mpv --ytdl https://daftsex.com/watch/-192008327_456240500
nvim .config/yt-dlp.conf
mpv --ytdl https://daftsex.com/watch/-192008327_456240500
alias wp='mpv --ytdl'
wp https://daftsex.com/watch/-201705290_456240425
brew install codelite
codelite
mpv --ytdl https://daftsex.com/watch/-201705290_456240425
alias wp='mpv --ytdl'
wp 'https://www.shemaletubevideos.com/video/shemale-compilacion-RlKdpEK4Hv6.html?x=MS0zOA=='
wp https://cdnmedia.shemaletubevideos.com/flv/0410/213340/hd.mp4
wp https://www.trannyvideosx.com/video/19511/transex-pov-paradise-home-alone-with-the-au-pair
yt-dlp https://www.trannyvideosx.com/embed/d5593fdb22010cd00c7c
man glob
man zsh
man zshexpn
q
alias wp='mpv --ytdl'
alias yt='yt-dlp'
yt https://www.trannyvideosx.com/embed/d5593fdb22010cd00c7c
yt https://www.trannyvideosx.com/embed/b406d003adb901e3bfc6
yt https://www.trannyvideosx.com/embed/d5593fdb22010cd00c7c
yt https://www.trannyvideosx.com/embed/ffbc8305184d53e5dcd9
ls
cd Movies
ls
rm tranny-nurse-andylynn-payne-gets-ass-fucked-hardcore.unknown_video
mpv video.mp4
yt https://www.trannyvideosx.com/video/10129/ariadny-oliver-gets-fucked-and-fucks
yt https://www.trannyvideosx.com/video/9211/trans-pool-party-3-nadia-love-ivory-mayhem-jade-venus-kate-zoha
yt https://www.trannyvideosx.com/video/1249/ts-raw-yasmin-dornelles-gangbang
yt https://www.trannyvideosx.com/video/2104/ts-raw-sabrina-melyssa-gabrielly-ferraz-cum-kiss-piss-bareback-threesome
mpv TS\ RAW\ -\ Sabrina\ Melyssa\ \&\ Gabrielly\ Ferraz\ -\ Cum\ Kiss\ \&\ Piss\ Bareback\ Threesome.mp4
yt https://www.trannyvideosx.com/video/3317/isa-lawrence-dap-gangbang
yt https://www.trannyvideosx.com/video/9656/deborah-mastronelly-gets-barebacked
yt https://www.trannyvideosx.com/video/15310/eva-duarte
yt https://www.trannyvideosx.com/video/9619/giving-each-other-cock-bianca-meirelles
nvim .config/yt-dlp.conf
nvim ~/.config/yt-dlp.conf
yt https://www.trannyvideosx.com/video/10419/amanda-araujo-gets-barebacked
yt https://www.trannyvideosx.com/video/10419/amanda-araujo-gets-barebacked
yt https://www.eporner.com/video-I0nasL8PUJT/alexa-scout-gets-an-a/
yt https://www.eporner.com/video-T5Wy3aIa93q/rough-control-fucking-for-alexa-scout/
yt https://www.eporner.com/video-noAaGS9GGlg/double-ended-dildo-in-use-at-the-pool/
yt https://www.eporner.com/hd-porn/i4k81nbXWmD/Girls-Share-Double-ended-Dildo/
yt https://www.eporner.com/video-7n97flw5hEr/blonde-and-brunette-lesbians-share-double-headed-dildo/
yt https://www.eporner.com/hd-porn/hxuYo3KpPYJ/Redhead-And-Blonde-Play-With-Double-ended-Dildo/
l
mpv video.mp4
c
mv video.mp4 cumming-while-getting-fucked.mp4
ls
mkdir .pron/lez && for movie in ./*+([Ll]esbian|[dD]ouble)+*.mp4 ; do mv -v $movie .pron/lez ; done
mkdir .pron/lez && for movie in "./*+([Ll]esbian|[dD]ouble)+*.mp4" ; do mv -v $movie .pron/lez ; done
ls
for movie in "./*+([Ll]esbian|[dD]ouble)+*.mp4" ; do mv -v $movie .pron/lez ; done
ls
ls .pron/lez
for movie in $(ls ./*+([Ll]esbian|[dD]ouble)+*.mp4) ; do mv -v $movie .pron/lez ; done
ls ./*+([Ll]esbian|[dD]ouble)+*.mp4
ls *+([Ll]esbian|[dD]ouble)+*.mp4
ls *+{[Ll]esbian|[dD]ouble}+*.mp4
ls *+{lesbian|double}+*.mp4
ls *([Ll]esbian|[Dd]ouble)*.mp4
for movie in *+([Ll]esbian|[dD]ouble)+*.mp4 ; do mv -v $movie .pron/lez ; done
for movie in *([Ll]esbian|[dD]ouble)*.mp4 ; do mv -v $movie .pron/lez ; done
ls
mv -v *.mp4 .pron
ls
l
cd .pron
ls
mkdir ts
mv *.mp4 ts
ls
l
cd lez
l
cd ..
mpv ./lez
mpv ./ts
mpv ./ts
\
i
q
cd ..
q
gh repo clone CleanCut/ultimate_rust_crash_course -- rust_course
cd rust_course
ls
cd exercise
ls
q
yarn global add remark
q
q
todo
q
make uninstall
sudo make uninstall
ls
make clean
make distclean
make clean
ls
nvim etc.c
rm -vrf ~/.w3m
./configure --enable-image --without-gc --with-ssl
./configure --enable-image --with-gc --with-ssl
./configure --enable-image --with-gc=/opt/homebrew --prefix=/Users/me/.local --with-ssl
make clean
make distclean
./configure --enable-image --with-gc=/opt/homebrew --prefix=/Users/me/.local --with-ssl=/opt/homebrew
make --jobs 10 
sudo make install
sudo make uninstall
make install
make clean
make distclean
make uninstall
./configure --enable-image --with-gc=/opt/homebrew --prefix=/Users/me/.local --with-ssl=/opt/homebrew
make 
rm ~/.local/bin/w3m
ls ~/.local/share/man/de/man1
ls ~/.local/share/man/
ls ~/.local/share/man/ja
ls ~/.local/share/man/ja/man1
ls
ls ~/.local/share/man/man1
ls ~/.local/share/w3m
rm -rf ~/.local/share/w3m
ls ~/.local/share
ls ~/.local
ls ~/.local/libexec
rm -rf ~/.local/libexec/w3m
sudo rm -rf ~/.local/libexec/w3m
ls
ls ~/.local
ls ~/.local/state
make install
sudo chown -R -v me:staff /Users/me/.local/share/man /Users/me/.local/share/man/man1 /Users/me/.local/share/w3m /Users/me/.local/libexec 
make install
ls
cd ../../
ls
cd libexec
ls
cd w3m
ls
nvim
q
ls
f
q
todo
clear
neovide --multigrid --noidle --nosrgb --nofork --frame None
neovide --multigrid --noidle --nosrgb --nofork --frame Buttonless
q
w3m
w3m www.google.com
w3m -cookie www.google.com
w3m -cookie www.google.com
w3m -cookie https://www.google.com
w3m -cookie https://google.com
w3m https://www.google.com
nvim ~/.w3m
w3m https://www.google.com
cd .local/src/w3m
make uninstall
make clean
make distclean
clear
ls
cd ..
ls
rm w3m
rm -rf w3m
brew install lynx
brew uninstall lynx
brew info lynx
brew info --cask lynx
brew info lynx
brew install lynx
lynx
f
openssl ca
sudo openssl ca
for movie in *([Ll]esbian|[dD]ouble)*.mp4 ; do mv -v $movie .pron/lez ; done
f
cargo init --name variables
ls
rm -rf src .git Cargo.toml
l
rm .gitignore
cargo new --name variables ./variables
ls
cd variables
ls
l
cd ..
ls
cd rust_course
ls
mdcat exercise/a_variables
mdcat exercise/a_variables/README.md
mdcat exercise/a_variables/ANSWERS.md
ls
cd exercise
ls
cd ..
cd examples
ls
cd hello
ls
cd src
ls
nvim lib.rs
cd ../../../exercise/b_functions
ls
bat README.md
w3m ./README.md
mdcat --help
mdcat -p README.md
brew install elinks
elinks
ls
cd exercise/b_functions
ls
cargo run
cargo run
cargo run
cargo run
cargo run
cargo run
f
nvim Cargo.toml
brew install qutebrowser
cd ~/.local/src
gh repo clone qutebrowser/qutebrowser
cd qutebrowser
ls
cd scripts
ls
./dictcli.py
cd ..
sudo cp -rv scripts /Applications/qutebrowser.app/Contents/MacOS
cd /Applications/qutebrowser.app/Contents/MacOS/scripts
ls
./dictcli.py
nvim dictcli.py
brew uninstall qutebrowser
ls
cd 
ls /Applications/qutebrowser.app/Contents/MacOS
brew uninstall qutebrowser
pip3 install qutebrowser
qutebrowser
pip3 install PyQt5
sudo pip3 install PyQt5
pip3 install pyproject
pip3 install PyQt5
q
mv .config/nvim .config/nvim.bak.3
git clone https://github.com/AstroNvim/AstroNvim ~/.config/nvim\
nvim +PackerSync
f
nvim
nvim
brew tap helix-editor/helix
brew upgrade
ls
brew install helix
ls
hx
hx --health
yarn global add typescript typescript-language-server
go install golang.org/dev/tools/x/gopls
go install golang.org/dev/tools/x/gopls@latest
go install golang.org/dev/x/tools/gopls@latest
go install golang.org/x/dev/tools/gopls@latest
go install go.org/dev/x/tools/gopls@latest
go install go.dev/tools/x/gopls@latest
go install go.dev/x/tools/gopls@latest
go install golang.dev/x/tools/gopls@latest
go install golang.org/x/tools/gopls@latest
gopls 
hx --health
hx
f
cpan -n Neovim::Ext
bash -c "$(curl --fail --show-error --silent --location https://raw.githubusercontent.com/zdharma-continuum/zinit/HEAD/scripts/install.sh)"
q
rm -vrf ~/{.config,.local/share}/nvim && mv ~/.config/nvim.bak.3 ~/.config/nvim && nvim +PackerSync
nvim
nvim
nvim
nvim
nvim
c
nvim ~/.config/starship.toml
clear
nvim ~/.config/starship.toml
cd Applications
nvim ~/.config/starship.toml
zinit self-update
nvim ~/.config/zsh/.zshrc
q
ls
PS1="READY > "
zinit ice wait '!-
zinit ice wait '!0'
zinit load halfo/lambda-mod-zsh-theme
PS1="READY > "
zinit ice wait'!' lucid nocd \\
    atload'!prompt_zinc_setup; prompt_zinc_precmd'\
zinit load robobenklein/zinc\

ls
cd Projects/rust_course
ls
zinit load zdharma-continuum/zinit-annex-rust
q
zini loaded
zinit light wait lucid mjrafferty/apollo-zsh-theme
zinit ice wait lucid
zinit load mjrafferty/apollo-zsh-theme
zinit ice wait lucid
zinit light mjrafferty/apollo-zsh-theme
ls
clear
nvim ~/.config/zsh/.zshrc
q
nvim ~/.config/zsh/.zshrc
q
brew instal svn
ls /Library/Java/Extensions
sudo ls /Library/Java/Extensions
sudo ln -sv /opt/homebrew/lib/libsvnjavahl-1.dylib /Library/Java/Extensions/
c
q
ls
nvim ~/.config/zsh/.zshrc
nvim ~/.config/zsh/.zshrc
q
echo '(( ! ${+functions[p10k]} )) || p10k finalize' >>! ~/.config/zsh/.zshrc\

\:wqa
q
nvim ~/.config/zsh/.zshrc
q
typeset -g POWERLEVEL9K_INSTANT_PROMPT=off
q
nvim ~/.config/zsh/.zshrc
q
ls
nvim ~/.config/zsh/.zshrc
q
nvim ~/.config/zsh/.zshrc
nvim ~/.config/zsh/.zshrc
q
l
f
rm -rf -- ${ZPLGM[SNIPPETS_DIR]}
nvim ~/.config/zsh/.zshrc
q
ls
q
ls
nvim ~/.config/zsh/.zshrc
j
nvim ~/.config/zsh/.zshrc
q
lf
nvim ~/.config/zsh/.zshrc
q
ls
nvim ~/.config/zsh/.zshrc
nvim ~/.config/zsh/.zshrc
exit
p10k configure
clear
q
ls
clear
cd Projects/rust_course
clear
nvim ~/.config/zsh/.zshrc
q
ls
nvim ~/.config/zsh/.zshrc
nvim ~/.config/zsh/.zshrc
q
f
q
q
clear
ls
nvim ~/.config/zsh/.zshrc
q
ls
cd Projects/rust_course
c
cd
htop
sudo htop
TERM=xterm-256color sudo htop
clear
ls
ls
nvim ~/.config/zsh/.zshrc
q
sudo htop
TERM=xterm-256color sudo htop
ls
clear
ls
q
exit
ls
cle
c
nvim ~/.config/zsh/.zshrc
q
ls
nvim ~/.config/yabai/yabairc
q
kitty --help
man yabai
q
kitty --title "PopUp Terminal"
nvim ~/.config/kitty/sessions/popup_terminal.conf
nvim
nvim
nvim
ls
clear
nvim ~/.config/kitty/sessions/popup_terminal.conf
nvim ~/.config/kitty/sessions/popup_terminal.conf
nvim ~/.config/kitty/sessions/popup_terminal.conf
kitty +edit-config
kitty +edit-config
ls
nvim
q
nvim
nvim
nvim
nvim
q
nvim
brew install --cask goneovim
goneovim
f
nvim
nvim
nvim
nvim
nvim
nvim
brew install --cask vscodium
defaults write com.visualstudio.code.oss ApplePressAndHoldEnabled -bool false
q
ls
f
q
c
cd flutter_app
ls
q
cd first_app
flutter run
q
c
q
nvim
elinks
brew install libpng jpeg libtiff libsvg tar zlib bzip2 xz x
brew install libpng jpeg libtiff libsvg tar zlib bzip2 xz
brew install libpng jpeg libtiff libsvg zlib bzip2 xz
cd Do
cd Downloads
ls
rm links-2.27\(1\).tar.gz
tar -xf links-2.27.tar.gz
ls
cd links-2.27
cd ..
mv links-2.27 ~/.local/src && cd 
cd ~/.local/src
cd links-2.27
./configure --help
./configure --enable-graphics --with-ssl 
./configure --enable-graphics --with-ssl=/System/Library/OpenSSL
./configure --enable-graphics --with-ssl=/usr/bin/openssl
./configure --enable-graphics
./configure --help
brew install links
links -g
brew uninstall links
./configure --enable-graphics
brew install cask
brew install links
links -g
links
brew install simplelink-msp432-sdk
clear
brew install xquartz
./configure --x-includes=/usr/X11/include --x-libraries=/usr/X11/lib/ --enable-graphics
sudo make install
make clean
make
sudo make install
links -g
brew uninstall links
links -g
q
f
ls
links -g
cd ~/.local/src/links-2.27
make uninstall
sudo make uninstall
make clean
make distclean
ls
./configure --x-includes=/usr/X11/include --x-libraries=/usr/X11/lib/ --enable-graphics --with-ssl=/opt/local/homebrew
./configure --x-includes=/usr/X11/include --x-libraries=/usr/X11/lib/ --enable-graphics --with-ssl=/opt/homebrew
nvim configure
./configure --x-includes=/usr/X11/include --x-libraries=/usr/X11/lib/ --enable-graphics --with-ssl=nss
brew install openssl
echo 'export PATH="/opt/homebrew/opt/openssl@3/bin:$PATH"' >> ~/.zshenv
export LDFLAGS=-L/opt/homebrew/opt/openssl@3/lib
export CPPFLAGS=-I/opt/homebrew/opt/openssl@3/include
export PKG_CONFIG_PATH=/opt/homebrew/opt/openssl@3/lib/pkgconfig
q
export LDFLAGS=-L/opt/homebrew/opt/openssl@3/lib
export CPPFLAGS=-I/opt/homebrew/opt/openssl@3/include
export PKG_CONFIG_PATH=/opt/homebrew/opt/openssl@3/lib/pkgconfig
cd ~/.local/src/links-2.27
./configure --x-includes=/usr/X11/include --x-libraries=/usr/X11/lib/ --enable-graphics --with-ssl
make
sudo make install
links -g
brew install dwm
xmodmap -e 'remove Mod2 = Meta_L' -e 'add Mpd1 = Meta_L\
' &
echo "xmodmap -e 'remove Mod2 = Meta_L' -e 'add Mod1 = Meta_L' &" >> .xinitrc
clear
dwm
dwm
Xquartz
links -g
Xquartz -h
dwm
clear
brew install i3
elinks
links -g trannytube.tv
links trannytube.tv
ls
l
nvim .xinitrc
Xquartz -h
Xquartz
Xquartz
Xquartz
links -g
ls
q
links -g
q
q
q
links -g
rm .xinitrc
links -g
clear
q
cd /
sk
cd -
cd -
cd /usr/lib
ls
cd pkgconfig
ls
cd /opt/homebrew
ls
cd include
ls
l glib-2.0
f
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)"
cd
ls /opt/homebrew/bin
sudo rm -rf /opt/homebrew
q
links -g
elinks
cd ~/.local/src/
ls
tar -xf w3m-0.5.3+git20220429.tar.xz
ls
cd w3m-0.5.3+git20220429
ls
./configure --enable-image --with-gc=/opt/homebrew --with-ssl
ls
cd ..
rm -rf w3m-0.5.3+git20220429 w3m-0.5.3+git20220429.tar.xz
ls
gh repo clone tats/w3m
cd w3m
ls
./configure --enable-image --with-gc=/opt/homebrew --with-ssl
make
brew install glib
brew reinstall glib
./configure --enable-image --with-gc=/opt/homebrew --with-ssl
./configure --help
PKG_CONFIG_PATH=/opt/homebrew/opt/pkg-config/bin ./configure --enable-image --with-gc=/opt/homebrew --with-ssl 
make
ls
make clean
make distclean
PKG_CONFIG_PATH=/opt/homebrew/opt/pkg-config/bin ./configure --enable-image --with-gc=/opt/homebrew --with-ssl 
make
sk
PKG_CONFIG_PATH=/opt/homebrew/opt/pkg-config/bin LDFLAGS=-L/opt/homebrew/Cellar/glib/2.72.2/lib CPPFLAGS=-I/opt/homebrew/Cellar/glib/2.72.2/include ./configure --enable-image --with-gc=/opt/homebrew --with-ssl 
make clean
make distclean
PKG_CONFIG_PATH=/opt/homebrew/opt/pkg-config/bin LDFLAGS=-L/opt/homebrew/Cellar/glib/2.72.2/lib CPPFLAGS=-I/opt/homebrew/Cellar/glib/2.72.2/include ./configure --enable-image --with-gc=/opt/homebrew --with-ssl 
make
PKG_CONFIG_PATH=/opt/homebrew/opt/pkg-config/bin LDFLAGS=-L/opt/homebrew/lib CPPFLAGS=-I/opt/homebrew/include ./configure --enable-image --with-gc=/opt/homebrew --with-ssl 
make clean
make distclean
LDFLAGS=-L/opt/homebrew/lib CPPFLAGS=-I/opt/homebrew/include ./configure --enable-image --with-gc=/opt/homebrew --with-ssl 
make
q
nvim ~/.config/yabai/yabairc
kitty --title "PopUp Terminal"
mpv --ytdl https://www.trannytube.tv/movies/725401/lustful-shemale-danny-bendochy-orgasms-whilst-riding-her-mans-penis
dwm
dwm
nvim 
cd Downloads/
ls
cd pkgsrc
ls
cd Downloads/pkgsrc
l
cd bootstrap
./bootstrap --prefix /opt/pkg-2022Q2 prefer-pkgsrc yes --make-jobs 10
sudo ./bootstrap --prefix /opt/pkg-2022Q2 prefer-pkgsrc yes --make-jobs 10
rm -rf work
sudo ./bootstrap --prefix /opt/pkg-2022Q2 prefer-pkgsrc yes --make-jobs 10
cd /opt/pkg-2022Q2
ls
cd etc
ls
sudo vim mk.conf
\:q
ls
cd ../../
ls
cd pkg-2022Q2
ls
cd pkgdb
ls
cd ..
ls
cd ..
ls
cd X11
ls
cd ..
ls
cd ..
ls
cd ~/Downloads
ls
cd pkgsrc
ls
cd devel
ls
clear
cd
cd Downloads
BOOTSTRAP_TAR="bootstrap-macos11-trunk-arm64-20211207.tar.gz"
BOOTSTRAP_SHA="036b7345ebb217cb685e54c919c66350d55d819c"
curl -O https://pkgsrc.joyent.com/packages/Darwin/bootstrap/${BOOTSTRAP_TAR}
echo "${BOOTSTRAP_SHA}  ${BOOTSTRAP_TAR}" | shasum -c-
sudo tar -zxpf ${BOOTSTRAP_TAR} -C /
eval $(/usr/libexec/path_helper)
q
sudo pkgin -y update
pkgin search ^ffmpeg[0-9]$
pkgin search ^ffmpeg
sudo pkgin -y install ffmpeg5
sudo pkgin -y install zsh zsh-autosuggestions zsh-completions zsh-syntax-highlighting zsh-pure
printenv
vim ~/.zshenv
q
printenv 
vim ~/.zshenv
printenv
q
nvim
pkgin install w3m-img
sudo pkgin install w3m-img
w3m
w3m google.com
w3m trannytube.tv
w3m
w3m google.com
w3m google.com
pkgin -y install ImageMagick
sudo pkgin -y install ImageMagick
q
c
cd
cd 
cd /
ls
f
ls
zsh-5.9
q
f
pip3 --help
pip3 list
pip3 install pillow
pip installq
q
kitty +icat
cd ~/Pictures
l
kitty +icat sieg.jpg
kitty +icat siege.jpg
q
f
w3m google.com
w3m google.com
rm -rf ~/.w3m
q
w3m
w3m google.com
w3mman
w3m
w3m google.com
sudo vim /etc/shells
chsh -s /opt/pkg/bin/zsh-5.9 me
q
l
nvim .w3m/
vim .w3m
pkgin -y install w3m
sudo pkgin -y install w3m
sudo pkgin -y install w3m-img
sudo pkgin -y rm w3m-img
sudo pkgin -y install w3m-img
ls
l .w3m
zsh-5.9
q
pkgin -y avail
sudo pkgin -y install python310
sudo pkgin -y install py310-Pillow
pkgin -y clean
sudo pkgin -y clean
pkgin -y rm w3m-img
pkgin -y install neovim
sudo pkgin -y install neovim
cd 
cd .local/src/neovi
cd .local/src/neovim
make unittest
make uninstall
sudo rm -rf /usr/{bin,share,lib}/nvim
make CMAKE_BUILD_TYPE=Release
make clean
make distclean
git pull
make CMAKE_BUILD_TYPE=README.md
make CMAKE_BUILD_TYPE=Release
pkgin -y autoremove
pkgin -y clean
sudo pkgin -y autoremove
sudo pkgin -y clean
sudo pkgin -y update
sudo pkgin -y upgrade
sudo pkgin -y install cmake
sudo pkgin -y install yt-dlp
cd ~/Downloads/
ls
mv pkgsrc ~/.local/src
cd ~/.local/src
ls
cd pkgsrc
ls
cd devel
ls
ls
cd ..
ls
cd editors
ls
cd neovim
ls
bmake install clean
cd -
cd ~/.local/src/neovi
cd ~/.local/src/neovim
make CMAKE_BUILD_TYPE=Release
pkgin -y install unibilium
sudo pkgin -y install unibilium
make CMAKE_BUILD_TYPE=Release
make clean
make distclean
make CMAKE_BUILD_TYPE=Release
q
cd ~/.local/src/neovi
cd ~/.local/src/neovim
make clean
make distclean
make CMAKE_BUILD_TYPE=Release
sudo pkgin -y install glib2-tools
make CMAKE_BUILD_TYPE=Release
make clean distclean
make CMAKE_BUILD_TYPE=Release
make clean distclean
sudo pkgin -y install glib2
sudo pkgin -y install glib
make CMAKE_BUILD_TYPE=Release
q
cd ~/.local/src/neovim
make clean
make distclean
make CMAKE_BUILD_TYPE=Release
sudo pkgin -y install glib
cd /opt/pkg/
ls
cd bin
ls
cd ../libexec
ls
cd ..
ls
cd sbin
ls
cd ..
cd ..
rm -rf pkg-2022Q2 pkg X11
sudo rm -rf pkg-2022Q2 pkg X11
ls
q
ls
nvim ~/.zshenv
vim .zshenv
ls /opt/local/bin
port
nvim .zshenv
vim .zshenv
q
printenv
sudo port install zsh zsh-completion
sudo sh -c 'echo /opt/local/bin/zsh 
sudo sh -c 'echo /opt/local/bin/zsh >> /etc/shells'
sudo chpass -s /opt/local/bin/zsh me
q
cd .local/src
ls
cd yabai
ls
git pull
bat .git/config
port
sudo port
sudo rm -vrf /usr/{share,bin,lib}/nvim
sudo rm -vrf /usr/local/{share,bin,lib}/nvim
a
q
nvim
nvim --version
nvim --version
nvim +checkhealth
q
kitty +edit-config
q
sudo port load yabai
sudo port load skhd
q
kitty +edit-config
q
sudo yabai --install-sa
sudo yabai --load-sa
port
sudo port
sudo cp -rv /opt/local/share/doc/mpv/examples/config-maintainer ~/.config/mpv/config
sudo chown -v me:staff ~/.config/mpv/config
nvim ~/.config/mpv/config
pset docutils py310-docutils
psel
pset python python310
pset python3 python310
padd 
padd pip3
padd pip
padd py310-pip
pset pip pip310
pset pip3 pip310
pip3 install neovim
pip install Pillow
pip install neovim
clear
sudo port
q
nvim ~/.config/zsh/.zshrc
padd neomutt mpv yt-dlp
q
nvim .config/zsh/.zshrc
q
exit
f
lf
exit
sudo port
exit
c
nvim .config/zsh/.zshenv
q
exit
sudo mkdir -vp /opt/local/var/db/postgresql14/defaultdb
sudo chown postgres:postgres /opt/local/var/db/postgresql14/defaultdb
sudo su postgres -c cd '/opt/local/var/db/postgresql14 && /opt/local/lib/postgresql14/bin/initdb -D /opt/local/var/db/postgresql14/defaultdb'
sudo port load
sudo port load --summary
sudo port selfupdate
pup
padd pgcli
pset pygments py310-pygments
sudo pgcli
q
ls
padd postgresql14-server
padd htop
htop
psel
pset postgresql postgresql14
sudo chown postgres:postgres /opt/local/var/db/postgresql14
l /opt/local/var/db
sudo su postgres
htop
sudo pkill postgres
htop
q
padd w3m-devel
sudo port variants w3m-devel
sudo port variants w3m
sudo port variants links
sudo port variants links +svg +tiff +x11
sudo port install links +svg +tiff +x11
links -g
which links
cd ~/.local/src/links-2.27
make uninstall
sudo make uninstall
sudo make clean
make distclean
q
q
links -g
f
./launchd_startx
./launchd_startx links -g
./launchd_startx 'links -g'
./privileged_startx links -g
./privileged_startx
./launchd_startx 'links -g'
./launchd_startx links -g
clear
ls
cd
ls
padd w3m-devl +imlib2
padd w3m-devel +imlib2
w3m google.com
prm w3m
sudo port variants w3m-devel
sudo port install w3m-devel +inline_image_imlib2
w3m google.com
htop
q
w3m google.com
yt-dlp https://www.trannytube.tv/movies/374238/ec77c9b20e94b4ec30a4
nvim .config/yt-dlp.conf
yt-dlp https://www.ashemaletube.com/videos/777854/isa-laurens/
sudo port variants yt-dlp 
sudo port variants yt-dlp +python310 +ffmpeg
sudo port install yt-dlp +python310 +ffmpeg
sudo port reinstall yt-dlp +python310 +ffmpeg
padd aria2 
yt-dlp https://www.trannytube.tv/movies/374238/ec77c9b20e94b4ec30a4
yt-dlp https://www.ashemaletube.com/videos/777854/isa-laurens/
yt-dlp -uBeefSorbet -p'DPMV@d#_5MHCC_P' https://www.ashemaletube.com/videos/781028/pin-up-venus/
yt-dlp https://www.ashemaletube.com/embed/781028/11235/600/338/
yt-dlp https://www.ashemaletube.com/videos/781025/venus-just-the-tip/
yt-dlp https://www.ashemaletube.com/videos/780868/she-s-gotten-even-sexier/
yt-dlp https://www.ashemaletube.com/videos/760362/riding-dildo-and-cumming/
yt-dlp https://www.ashemaletube.com/videos/780868/she-s-gotten-even-sexier/
f
q
f
cd Movies
yt-dlp https://www.trannytube.tv/movies/352291/brasilians-ladymans-fuck-90h
yt-dlp https://www.ashemaletube.com/get_moviex/?mid=781025&h=28676
yt-dlp https://www.trannytube.tv/movies/632556/super-dirty-brazilian-sheboy-giana-becker
yt-dlp https://www.trannytube.tv/movies/1317901/taylor-jennings-pounded
yt-dlp https://www.trannytube.tv/movies/1395781/3744-720p
sudo port variants mpv
padd mpv +libmpv
yt-dlp https://www.trannytube.tv/movies/432529/deborah-mastronelly-com-dois-caras-sortudos
yt-dlp https://www.trannytube.tv/movies/1692341/two-ladyboys-in-a-threesome
yt-dlp https://www.trannytube.tv/movies/424435/ebony-shemale-fucked-and-her-large-love-mounds-creamed
yt-dlp https://www.ashemaletube.com/videos/781026/venus-the-hooker/
yt-dlp https://www.ashemaletube.com/videos/781163/giselly-fernandes/
yt-dlp https://www.ashemaletube.com/videos/780630/trans-pool-party/
yt-dlp https://www.ashemaletube.com/videos/760116/hot-tgirl-rides-your-cock-bareback/
yt-dlp https://www.ashemaletube.com/videos/780082/luna-costa/
yt-dlp https://www.ashemaletube.com/videos/779964/tranny/
yt-dlp https://www.ashemaletube.com/videos/779432/tranny/
yt-dlp https://www.trannytube.tv/movies/627996/ladyboy-rimming-and-cock-engulfing
f
l
mpv ./*.mp4
q
yt-dlp https://www.trannytube.tv/movies/627996/ladyboy-rimming-and-cock-engulfing
mpv Movies/*.mp4
mpv Movies/*.mp4
cd Movies/.pron
ls
cd ts
l
mpv Ariadny\ Oliver\ gets\ fucked\ and\ fucks\!.mp4
padd wget
nvm ls-remote
nvm install 18.5.0
nvm use v18.5.0
npm install yarn
npm uninstall yarn
ls
l
rm -rfv package* node_modules
ls
npm install --location=global yarn
clear
q
padd go revive gofumpt goimports taplo
go install golang.org/x/tools/gopls@latest
go install golang.org/x/tools/gofumpt@latest
go install golang.org/x/tools/goimports
go install golang.org/x/tools/goimports@latest
padd revive
w3m google.com
yarn global add tree-sitter-cli
padd luarocks
padd lua-luarocks
pset luarocks lua54-luarocks
pset luarocks lua53-luarocks
padd py310-black
pset black black310
psel
yarn global add neovim
padd stylua
nvim
nvim +checkhealth
nvim +checkhealth
links -g
nvim ~/.config/zsh/.zshenv
quartz-wm
padd xorg-libX11 11
padd xorg-libX11
l
cd .w3m
ls
w3m
q
cd
prm w3m
sudo port uninstall w3m
q
ls
f
q
port list
port list installed
q
which w3m
w3m
w3m google.com
w3m google.com
padd ImageMagick
padd libidn2
q
f
q
alias yt='yt-dlp'
yt https://www.ashemaletube.com/videos/780558/khloe-kay-2/
w3m google.com
icat
kitty icat Pictures/multiSquare.jpg
w3m google.com
w3m trannytube.tv
w3m trannytube.tv
w3m trannytube.tv
w3m udemy.com
links -g
links -g
padd dwm
padd i3
nvim ~/.xinitrc
go install github.com/mvdan/gofumpt@latest
go install mvdan.cc/gofumpt@latest
gh repo clone tamasfe/taplo
mv taplo ~/.local/src
cd ~/.local/src/taplo
ls
cargo build --release
cd target/release/
ls
ln -srv ~/.local/src/taplo/target/release/taplo ~/.local/bin/
ln -sv ~/.local/src/taplo/target/release/taplo ~/.local/bin/
taplo 
yarn global add prettierd
yarn global search prettier
yarn search prettier
cd
cd
yarn search prettier
yarn info prettier
w3m
w3m github.com
rm /Applications/goneovim.app
sudo rm -vrf /Applications/goneovim.app
nvim --version
nvim
nvim
nvim .config/alacritty/alacritty.yml
ls
clear
ls
nvim
1
1
q
cargo install neovide
cargo search neovide
cargo search editor
cargo search bevy
cargo search web
cargo search browser
cargo search webbrowser
cargo search  webbrowser
cargo search web browser
cargo search --limit 600 web browser
cargo install trails
trails
trails
cargo uninstall trails
cargo search --limit 600 web browser
gh repo clone antoyo/titanium
nvim ~/.config/yabai/yabairc
nvim ~/.config/yabai/yabairc
q
q
q
todo
ls Desktop/active/40-07.13-Mobile_App_Course.todo
clear
nvim ~/.config/yabai/yabairc
q
m 
padd mpv +libmpv
mpv
port variants mpv
padd mpv +libmpv
sudo port uninstall mpv
w3m
w3m google.com
links -g
links -g
nvim .xinitrc
cd .local/src
ls
cd yabai
l
cd ..
rm yabai
rm -rfv yabai
ls
cd SketchyBar
ls
nvim sketchybarrc
nvim DOCS.md
ls
make install
make
ls
cd bin
ls
l
ln -sv $PWD/sketchybar /usr/local/bin/
sketchybar
f
make clena
make clean
ls
make arm
make arm64
ls
cd bin
ls
./sketchybar
./sketchybar
cd ..
nvim DOCS.md
clear
sudo launchctl list | rg -i yabai
sudo launchctl list
sudo launchctl list | rg -i brew
sudo launchctl list 
sudo launchctl --help
launchd --hekp
launchd --help
launchctl help start
launchctl help bootstrap
launchctl help kickstart
f
./sketchybar&
clear
q
q
cargo build --release
padd gdk-pixbuf2
padd glib2-devel
prm glib2
prm i3
padd glib2-devel
pup
ls
cargo build --release
padd libsoup-devel
prm glib2-devel
padd libsoup-devel
prm glib2
padd glib2-upstream
padd libsoup-devel
psel
pset python2 python27
cargo build --release
sudo port
sudo port clean --all
padd libsoup
cargo build --release
padd atk
padd gtk-osx-application-gtk3
sudo port load dbus
padd gtk-osx-application-gtk3 +quartz
padd gtk-quartz-engine
port variants gtk3
padd gtk3 +quartz
padd gtk-osx-application-gtk3 +quartz
cargo build --release
padd webkit2-gtk-devel
padd webkit2-gtk-devel +quartz
port clean webkit2-gtk-devel
sudo port clean webkit2-gtk-devel
padd webkit2-gtk-devel +quartz
sudo port uninstall -u libsoup
sudo port install quartz-wm
padd webkit2-gtk-devel +quartz
padd libsoup +quartz
sudo port uninstall libsoup
q
f
q
port clean webkit2-gtk-devel
sudo port clean webkit2-gtk-devel
port uninstall -u installed
sudo port uninstall -u installed
ls
q
nvim ~/.config/zsh/functions/_port_aliases
q
padd zsh-completions
padd zsh-autosuggestions zsh-syntax-highlighting
q
f
q
sudo port echo leaves
sudo port uninstall -u leaves
sudo port uninstall -u leaves
sudo port uninstall -u leaves
sudo port uninstall -u leaves
sudo port uninstall -u leaves
sudo port uninstall -u leaves
sudo port uninstall -u leaves
sudo port uninstall -u leaves
port list installed
padd gtk3
pset pygments py310-pygments 
psel
padd py310-black py310-docutils lua53-luarocks pip310 postgresql14-server python310 pyton27 
padd postgresql14-server python310 pyton27 
sudo mkdir -p /opt/local/var/db/postgresql14/defaultdb
sudo chown postgres:postgres /opt/local/var/db/postgresql14/defaultdb
sudo su postgres -c 'cd /opt/local/var/db/postgresql14 && /opt/local/lib/postgresql14/bin/initdb -D\
/opt/local/var/db/postgresql14/defaultdb'
sudo su postgres -c 'cd /opt/local/var/db/postgresql14 && /opt/local/lib/postgresql14/bin/initdb -D /opt/local/var/db/postgresql14/defaultdb'
sudo rm -vrf /opt/local/var/db/postgresql14/defaultdb/*
sudo rm -vrf /opt/local/var/db/postgresql14/
ls
padd postgresql14-server
sudo mkdir -p /opt/local/var/db/postgresql14/defaultdb
sudo chown postgres:postgres /opt/local/var/db/postgresql14/defaultdb
sudo su postgres -c 'cd /opt/local/var/db/postgresql14 && /opt/local/lib/postgresql14/bin/initdb -D /opt/local/var/db/postgresql14/defaultdb'
clear
padd mpv +libmpv
port variants youtube-dl
port variants yt-dlp
padd yt-dlp
padd ffmpeg +nonfree
sudo nvim /opt/local/etc/macports/macports.conf
padd ccache
sudo nvim /opt/local/etc/macports/variants.conf
padd ccache
pset ruby ruby30
clear
gem install neovim
pip install neovim
q
pip install neovim]
padd py310-pop
padd py310-pip
clear
psel
pip install neovim
padd nvm
clear
q
nvm use v18.5.0
npm install --location=global yarn]
npm install --location=global yarn
nvim +checkhealth
padd go revive
nvim +checkhealth
padd wget
ls
padd webkit2-gtk
cd titanium
cargo build --release
cat README.adoc
nvim ~/.zshenv
export TITANIUM_EXTENSION_INSTALL_PATH=/usr/local/lib/titanium/web-extensions
sudo mkdir -p $TITANIUM_EXTENSION_INSTALL_PATH
cargo build --release
bat README.adoc
sudo cp target/release/titanium /usr/local/bin
cd titanium-web-extension
cargo build --release
bat ../README.adoc
sudo cp target/release/libtitanium_web_extension.dylib /usr/local/lib/titanium/web-extensions
clear
titanium
q
padd yabai shkd
padd skhd
clear
q
yabai --install-sa
sudo yabai --install-sa
sudo port load yabai
sudo port load skhd
padd mpv +libmpv
nvim $ZDOTDIR/functions/_common_aliases
$(pbpaste)
echo $(pbpaste)
nvim $ZDOTDIR/functions/_common_aliases
m
nvim $ZDOTDIR/functions/_common_aliases
m
q
cd Movies/.pron
ls
cd ts
ls
mpv 781025_480p_venus-just-the-tip.mp4
yt
ls
cd ..
ls
cd ..
ls
mpv Peachy\ Sky,\ Eloise\ Please\ and\ Summer\ Fox\ -\ lesbian\ -\ amateur\ -\ homemade\ -\ double\ dildo\ -\ lingerie\ -\ masturbation\ -\ mature\ -\ threesome\ -\ ManyV_ds\ -\ The\ Sleepover.mp4
ls
mpv Abella\ Danger\ \&\ Angela\ White\ And\ Krissy\ Lynn\ Phone\ Service\ Skills\ \#anal\ \#lesbian\ \#bigass\ \#bigtits\ \#threesome\ Download\ 1080p\ -\ https\ -_ddownload.com_hn1de1du5fxz.mp4
m
yt
yt
yt
padd aria2
yt
f
nvim $ZDOTDIR/functions/_common_aliases
q
m
m
m
yt
m
prm youtube-dl
q
yt
yt
q
m
https://hqporner.com/hdporn/69626-bangbros_-_two_girls_having_fun_in_the_bang_bus.html
mpv --ytdl https://hqporner.com/hdporn/69626-bangbros_-_two_girls_having_fun_in_the_bang_bus.html
yt
yt
yt
mpv Movies/Two\ Girls\ Having\ Fun\ In\ The\ Bang\ Bus.mp4
yt
echo $(pbpaste)
title=$(pbpaste)
pbcopy ${title/.html}
echo ${title/.html} | pbcopy
pbpaste
yt
yt-dlp -U
m
yt
m
m
yt
m
yt
yt
yt
yt
yt
yt
m
yt
yt
yt
yt
yt
ls
cd Movies
ls
mpv ./*
mpv ./*
q
zellij help
zellij options
zellij help options
q
q
q
q
q
nvim .config
q
zellij
zellij --help
zellij -l better.yaml
f
zellij -l better.yaml
zellij -l ~/.config/zellij/layout/better.yaml
ls
zellij
zellij --simplified-ui
zellij -- --simplified-ui
zellij options --simplified-ui
zellij options --simplified-ui true
zellij --simplified-ui true
zellij --help --simplified-ui true
zellij options --help
zellij options --theme --help
q
cd /opt/local/bin
ls
ls cc
ls cc
ls ccache
compilers=gcc g++ cc c++ 
declare -a ccompilers; compilers=gcc g++ cc c++ 
declare -a ccompilers; compilers=g(cc g++ cc c++)
q
f
titanium
qutebrowser
padd qutebrowser
sudo nvim /opt/local/etc/macports/macports.conf
padd ccache
padd qutebrowser
padd ccache
ccache --help
man cchache
man ccache
declare -a comps
comps=(gcc g++ cc c++)
for comp in $comps; do\
ln -sv /opt/local/bin/ccache /usr/local/bin/$comp\
done
which gcc
which cc
which c++
which cc
where gcc
q
which gcc
which cc
which c++
which g++
where gcc
where g++
where c
where cc
where c++
clear
q
man ccache
q
padd qutebrowser
sudo nvim /opt/local/etc/macports/macports.conf
q
gem install neovim
sudo gem install neovim
nvim
q
padd qutebrowser
sudo nvim /opt/local/etc/macports/macports.conf
sudo port clean qutebrowser
sudo port clean py310-pyqt5
padd qutebrowser
nvim /opt/local/var/macports/logs/_opt_local_var_macports_sources_rsync.macports.org_macports_release_tarballs_ports_python_py-pyqt5/py310-pyqt5/main.log
padd py310-sip
padd py310-sip-devel
padd py310-setuptools
sudo nvim /opt/local/etc/macports/macports.conf
clear
sudo port clean py310-pyqt5
sudo port clean qutebrowser
prm leaves
prm leaves
prm leaves
prm leaves
prm leaves
prm leaves
prm leaves
prm leaves
prm leaves
prm leaves
padd ruby
padd ruby31
pset ruby ruby31
psel
padd mariadb-10.9-server
sudo -u _mysql /opt/local/lib/mariadb-10.9/bin/mysql_install_db
sudo chown _mysql:_mysql /opt/local/var/db/mariadb-10.9/
cd /opt/local/
lib/mariadb-10.9/bin/mysqld_safe --data-dir='/opt/local/var/db/mariadb-10.9'
sudo -u _mysql lib/mariadb-10.9/bin/mysqld_safe --data-dir='/opt/local/var/db/mariadb-10.9'
padd mycli
q
sudo -u _mysql /opt/local/lib/mariadb-10.9/bin/mysqld_safe --data-dir='/opt/local/var/db/mariadb-10.9'
ls
sudo -u _mysql /opt/local/lib/mariadb-10.9/bin/mysqld --data-dir='/opt/local/var/db/mariadb-10.9'
sudo -u _mysql /opt/local/lib/mariadb-10.9/bin/mysqld --datadir='/opt/local/var/db/mariadb-10.9'
htop
padd htop
sudo htop
padd kitty
which kitty
sudo rm -vrf /Applications/kitty.app/Contents/MacOS/kitty
q
q
q
f
q
padd kitty
prm kitty
sudo port clean kitty
kitty
padd kitty
f
nvim org.macports.yabai
gh repo clone yabai
clear
cd yabai
nvim .git
git pull upstream
git pull upstream master
ls
bat makefile
make install
ls
cd bin
ls
sudo port unload yabai
./yabai
cd yabai
ls
cd assets
ls
cd ../examples
ls
cd ../scripts
ls
cd ../src
ls
cd misc
ls
cd ../osax
ls
cd arm64
ls
cd ..
ls
cd ..
l
cd ..
ls
bat makefile
make sign
mak man
make man
padd asciidoctor
ls
cp bin/yabai ~/.local/bin
cd
yabai
which yabai
q
nvim .config/kitty/kitty.conf
q
launchctl start org.macports.yabai/org.macports.yabai.plist
launchctl start /Users/me/.local/bin/yabai
which yabai
yabai
yabai
nvim .config/yabai/yabairc
ls
sudo cp yabai-4.0.1_0.darwin_21.arm64.tbz2 ~
cd ~
ls
q
launchctl start /Users/me/.local/bin/yabai
launchctl kickstart /Users/me/.local/bin/yabai
launchctl --help
daemondo --help
f
sudo chown me:staff yabai-4.0.1_0.darwin_21.arm64.tbz2
ls
l
q
f
daemondo --labal=fyabai --start-cmd "/Users/me/.local/bin/yabai" ";" --pid=exec
daemondo --labal=fyabai --start-cmd /Users/me/.local/bin/yabai ';' --pid=exec
daemondo --help
daemondo --labal="fyabai" -s '/Users/me/.local/bin/yabai ;' --pid=exec
daemondo -s '/Users/me/.local/bin/yabai ;' --pid=exec
daemondo -s /Users/me/.local/bin/yabai \; --pid=exec
nvim ~/.local/bin/
f
q
which yabai
sudo htop
prm yabai
q
cd /
f
q
which kitty
sudo rm -vrf /Applications/kitty.app
clear
q
nvim .config/skhd/skhdrc
q
nvim .config/yabai/yabairc
q
q
nvim .config/yabai/yabairc
q
sudo yabai --install-sa
sudo yabai --load-sa
cd ~/.local/src/SketchyBar
ls
nvim sketchybarrc
cd bin
ls
ls ~/.local/bin/
cp sketchybar ~/.local/bin
q
q
mv $ZDOTDIR/.zprofile $ZDOTDI/.zlogin
mv $ZDOTDIR/.zprofile $ZDOTDIR/.zlogin
q
clear
ls
f
pgrep sketchybar
pgrep hso
killall sketchybar
pgrep sketchybar
if ! pgrep sketchybar ; then sketchybar fi &
if ! pgrep sketchybar ; then sketchybar fi
if ! pgrep sketchybar ; then sketchybar ; fi &
if ! pgrep sketchybar ; then sketchybar ; fi &
if ! pgrep sketchybar ; then sketchybar ; fi &
if ! pgrep sketchybar ; then sketchybar ; else printf '\e[33mSketchyBar is loaded aleady... ; fi &
if ! pgrep sketchybar ; then sketchybar ; else printf '\e[33mSketchyBar is loaded aleady...' ; fi &
if ! pgrep sketchybar ; then sketchybar ; else printf '\e[33mSketchyBar is loaded aleady...' ; fi &> /dev/null
killall sketchybar
if ! pgrep sketchybar ; then sketchybar ; else printf '\e[33mSketchyBar is loaded aleady...' ; fi &> /dev/null
(if ! pgrep sketchybar ; then sketchybar ; else printf '\e[33mSketchyBar is loaded aleady...' ; fi) &
(if ! pgrep sketchybar ; then sketchybar ; else printf '\e[33mSketchyBar is loaded aleady...' ; fi) &
(if ! pgrep sketchybar ; then sketchybar ; else printf '\e[33mSketchyBar is loaded aleady...' ; fi &) &> /dev/null
killall sketchybar
(if ! pgrep sketchybar ; then sketchybar ; else printf '\e[33mSketchyBar is loaded aleady...' ; fi &) &> /dev/null
(if ! pgrep sketchybar ; then sketchybar ; else printf '\e[33mSketchyBar is loaded aleady...' ; fi &) &> /dev/null
clear
q
kitty --override initial_window_width 320 --overide initial_window_height 200
kitty --override initial_window_width=320 --overide initial_window_height=200
kitty --override initial_window_width=320 --override initial_window_height=200 -- nvim
kitty --override initial_window_width=320 --override initial_window_height=200 --title='PopUp Term' -- nvim
kitty --override initial_window_width=320 --override initial_window_height=200 --title='PopUp Terminal' -- nvim
kitty --override initial_window_width=320 --override initial_window_height=200 --override remember_window_size=no --title='PopUp Terminal' -- nvim
kitty --override initial_window_width=320 --override initial_window_height=200 --override remember_window_size=no --title='PopUp Terminal'
kitty --override initial_window_width=640 --override initial_window_height=400 --override remember_window_size=no --title='PopUp Terminal'
q
q
q
q
q
q
q
float_term float
float_term float
q
sketchybar
nvim $ZDOTDIR/.zprofile
nvim ~/.local/bin/scripts/float_term.sh
f
float_term
nvim ~/.local/bin/scripts/float_term.sh
float_term
nvim ~/.local/bin/scripts/float_term.sh
float_term
nvim ~/.local/bin/scripts/float_term.sh
float_term
float_term
nvim ~/.local/bin/scripts/float_term.sh
float_term
nvim ~/.local/bin/scripts/float_term.sh
float_term
float_term dad
float_term dadfafgad
$(test -d $HOME/Projects)
( $(test -d $HOME/Projects) && echo yes ) || echo no
( test -d $HOME/Projects && echo yes ) || echo no
( test -d $HOME/Projectse/daf && echo yes ) || echo no
( test -d $HOME/Projectse/da && echo yes ) || echo no
( test -d $HOME/Projectse/go-micro && echo yes ) || echo no
( test -d $HOME/Projects/go-micro && echo yes ) || echo no
( test -d $HOME/Projects/go-mico && echo yes ) || echo no
( test -d $HOME/Projects/ && echo yes ) || echo no
nvim ~/.local/bin/scripts/float_term.sh
float_term dadfafgad
nvim ~/.local/bin/scripts/float_term.sh
float_term dadfafgad
float_term
nvim ~/.local/bin/scripts/float_term.sh
float_term
nvim ~/.local/bin/scripts/float_term.sh
float_term
float_term go-micro
float_term $HOME/Projects/go-micro
float_term $HOME/Projects/*
nvim ~/.local/bin/scripts/float_term.sh
float_term
nvim ~/.local/bin/scripts/float_term.sh
float_term float
nvim ~/.local/bin/scripts/float_term.sh
float_term float
nvim ~/.local/bin/scripts/float_term.sh
float_term float
nvim ~/.local/bin/scripts/float_term.sh
float_term float
float_term tiled
nvim ~/.local/bin/scripts/float_term.sh
float_term tiled
float_term float
nvim ~/.local/bin/scripts/float_term.sh
float_term float
nvim ~/.local/bin/scripts/float_term.sh
float_term float
float_term tiled
nvim ~/.local/bin/scripts/float_term.sh
float_term tiled
float_term
float_term float
nvim ~/.local/bin/scripts/float_term.sh
float_term float
nvim ~/.local/bin/scripts/float_term.sh
float_term f
nvim ~/.local/bin/scripts/float_term.sh
float_term f
nvim ~/.local/bin/scripts/float_term.sh
float_term f
nvim ~/.local/bin/scripts/float_term.sh
float_term f
q
kitty +edit-config
q
q
nvim $ZDOTDIR/.zprofile
q
qa
f
f
ls
cd ..
cd ..
flutter create flutter_quiz_app
cd flutter_quiz_app
ls
ls
rm -rfv web
ls
pip3 install Pillow
padd ImageMagick
q
prm neovim
padd neovim-devel
nvim --version
nvim +checkhealth
nvim
padd stylua
nvim +checkhealth
f
q
f
q
nvim $ZDOTDIR/functions/_common_aliases
q
q
w3m google.com
which w3,
which w3m
port variants w3m
port variants +inline_image_imlin2
port variants +inline_image_imlib2
padd w3m +inline_img_imlib2
w3m google.com
padd imlib2
w3m google.com
q
pvars neomutt
pvars mutt
pvars neomutt
padd neomutt +autocrypt +db5 +gdbm +gnutls +gss +homespool +kyotocabinet +lmdb +lua +notmuch +qdbm +rocksdb +sasl +sqlite +tdb +tokoycabinet
padd neomutt +autocrypt +gdbm +gnutls +gss +homespool +kyotocabinet +lmdb +lua +notmuch +qdbm +rocksdb +sasl +sqlite +tdb +tokoycabinet
sudo port clean neomutt
padd neomutt +autocrypt +gdbm +gnutls +gss +homespool +kyotocabinet +lmdb +lua +notmuch +qdbm +rocksdb +sasl +sqlite +tdb +tokoycabinet
ls
neomutt
q
padd lazygit
q
gh repo create --private --source /Users/me/Projects/flutter_quiz_app sorbetofbeef/flutter_quiz_app
cd Projects/flutter_quiz_app
q
flutter update-packages
q
q
nvim ~/.config/nvim/lua/user/lsp/init.lua
q
cd Projects/flutter_quiz_app/lib
sed -i -e '^/\/\// d'
sed -i -e 'd ^/\/\//'
sed -i -e 'd ^/\/\//' main.dart
sed -i -e d ^/\/\// main.dart
sed -i -e d \/\/ main.dart
sed -e d \/\/ main.dart.bak main.bak
sed -e d \/\/ main.dart.bak ./main.bak
sed -e d \/\/ main.dart.bak >> ./main.bak
ls ./main.bak
bat main.bak
bat main.dart
q
q
which nvim
prm neovim
sudo port clean neovim
prm neovim-devel
cd ~/.local/src/neovi
cd ~/.local/src/neovim
ls
make clean
make distclean
make CMAKE_BUILD_TYPE=Release
sudo make install
clear
q
vim ~/.config/yabai/yabairc
vim ~/.config/skhd/skhdrc
nvim ~/.config/nvim/lua/user/lsp/init.lua
nvim ~/.config/nvim/lua/user/lsp/init.lua
nvim ~/.config/nvim/lua/user/lsp/init.lua
nvim ~/.config/nvim/lua/user/lsp/init.lua
nvim ~/.config/nvim/lua/user/lsp/init.lua
nvim ~/.config/nvim/lua/user/lsp/init.lua
nvim ~/.config/nvim/lua/user/lsp/init.lua
nvim ~/.config/nvim/lua/user/lsp/init.lua
nvim ~/.config/nvim/lua/user/lsp/init.lua
nvim ~/.config/nvim/lua/user/lsp/init.lua
nvim ~/.config/nvim/lua/user/lsp/init.lua
nvim ~/.config/nvim/lua/user/lsp/init.lua
nvim ~/.config/nvim/lua/user/lsp/init.lua
nvim
q
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
q
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
yt
yt
yt
yt
yt
touch $HOME/.netrc
chmod a-xwr,u+rw $HOME/.netrc
nvim .netrc
nvim .netrc
yt
f
ls
mpv hq_28034fba6b094d1fb77018df792ccb6d.mp4
f
q
yt
yt
yt
yt
bat .netrc
yt
nvim ~/.config/yt-dlp.conf
yt
yt
yt
yt
nvim ~/.config/yt-dlp.conf
yt
yt
yt
yt
q
nvim ~/.config/mpv/config
q
f
yt
yt
yt
yt
yt
yt
cd ../..
mpv ./*.mp4
mpv ./*.mp4
yt
yt
yt
mpv ./*.mp4
mpv ./*.mp4
ls
mpv Transsexualangel.com\ -\ Danny\ Bendochy\ is\ so\ tattooed\ brunette\ at\ Tranny\ Tube\ TV.mp4
mpv aee8a46561065d8677229510f8fd9801.mp4
l
mpv hq_04e174ca5465e6f99fccbe7ac5b2d6e7.mp4
mpv hq_458fa8a05beb437a0be8d4b87a18cf81.mp4
mpv unfathomable\ Digging\ That\ big\ wazoo\ Of\ Julia\ at\ Tranny\ Tube\ TV.mp4
yt
yt
q
yt
yt
yt
mpv Movies/
mpv Movies/
mpv Movies/.pron/ts/GenderX\ -\ Pierced\ Michael\ DelRay\ uncover\ big\ cock\ at\ Tranny\ Tube\ TV.mp4
mpv Movies/.pron/lez/
mpv Movies/.pron/ts
mpv Movies
mpv Movies
mpv Movies/.pron/lez
kitty list-fonts
q
kitty list-fonts
ls
f
q
nvim ~/.config/kitty/kitty.conf
q
fc-list : family | rg -i fixed
q
nvim
q
l
clear
ls
nvim
nvim
nvim
q
kitty list-fonts
q
ls
nvim ~/.config/kitty/kitty.conf
ls
ls
clear
nvim ~/.config/kitty/kitty.conf
q
kitty list-fonts
qq
q
ls
clear
nvim ~/.config/kitty/kitty.conf
q
nvim ~/.config/kitty/kitty.conf
q
nvim ~/.config/kitty/kitty.conf
q
nvim 
nvim
nvim .config/kitty/kitty.conf i
nvim .config/kitty/kitty.conf
clear
ls
l
qutebrowser
padd gopass
gopass --help
gopass --completion --help
gopass completion --help
gopass completion zsh h
gopass completion zsh --help
gopass completion zsh
gopass completion zsh >> $ZDOTDIR/site_functions/_gopass
q
gopass list
gpg-connect-agent
clratr
c
gpg --full-gen-key --expert
gpg --full-gen-key --expert
padd pinentry-mac
padd pinentry
nvim ~/.gnupg/gpg-agent.conf
gpg-connect-agent RELOADAGENT /bye
pinentry
padd kitty
prm kitty
clear
q
nvim .config/alacritty/alacritty.yml
nvim .config/alacritty/alacritty.yml
fc-list : family | rg -i nerd
padd nerd-font 
padd wezterm
zed
q
read -r -k1
read -r -k1 -s hello
echo $hello
q
q
ls
clear
nvim
pup
nvim .config/zsh/functions/pup
pup
q
pup
pup
c
nvim ~/.config/skhd/skhdrc
f
q
wezterm ls-fonts
nvim ~/.config/zsh/.zshenv
q
nvim ~/.config/wezterm/wezterm.lua
q
nvim ~/.config/wezterm/wezterm.lua
q
nvim
nvim
nvim
nvim
q
nvim
nvim
nvim
nvim
nvim
q
nvim
nvim ~/.config/wezterm/wezterm.lua
nvim
nvim 
nvim ~/.config/wezterm/wezterm.lua
nvim ~/.config/wezterm/wezterm.lua
f
make clean
sudo rm -vrf /usr/local/{bin,share,lib}/nvim
make distclean
git pull origin master
clear
make CMAKE_BUILD_TYPE=Release
sudo make install
clear
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
q
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
q
nvim
q
q
python3 font-patcher.py
padd fontforge
pvars fontforge
padd fontforge
python3 font-patcher.py
for font in /Users/me/Library/Fonts/CartographCF/CartographCF-*.otf; do\
python3 font-patcher.py -out ~/Desktop/CartographCF-Nerd-Font/ --progressbars --fontawesome --fontawesomeextensions --powersymbols $font\
done
for font in /Users/me/Library/Fonts/CartographCF/CartographCF-*.otf; do\
python3 font-patcher.py -out ~/Desktop/CartographCF-Nerd-Font/ --progressbars --fontawesome --fontawesomeextension --powersymbols $font\
done
for font in /Users/me/Library/Fonts/CartographCF/CartographCF-*.otf; do\
python3 font-patcher.py -out ~/Desktop/CartographCF-Nerd-Font/ --progressbars --fontawesome --fontawesomeextension --powersymbols "/Users/me/Library/Fonts/CartographCF/CartographCF-${font}.otf"\
done
for font in /Users/me/Library/Fonts/CartographCF/CartographCF-*.otf; do\
python3 font-patcher.py -out ~/Desktop/CartographCF-Nerd-Font/ --progressbars --fontawesome --fontawesomeextension --powersymbols "${font}"\
done
ls
python3 font-patcher.py -h
./font-patcher.py
font-patcher
./font-patcher
q
alacritty
/Applications/Alacritty.app/Contents/MacOS/alacritty
cd Do
f
q
cd
f
q
wezterm --help
wezterm shell-completion
wezterm shell-completion --zsh >> $ZDOTDIR/site_functions/_wezterm
wezterm shell-completion --shell zsh > $ZDOTDIR/site_functions/_wezterm
q
cp -v /Applications/dmenu-mac.app/Contents/MacOS/dmenu-mac ~/.local/bin
dmenu-mac
rm ~/.local/bin/dmenu-mac
ln -s -v /Applications/dmenu-mac.app/Contents/MacOS/dmenu-mac ~/.local/bin
dmenu-mac
f
dmenu-mac
nvim dmenu-mac
dmenu-mac
dmenu-mac 
nvim dmenu-mac
nvim dmenu-mac
dmenu-mac 
echo "Hello" | dmenu-mac
echo $(pbpaste) | dmenu-mac 'wezterm start -- yt-dlp' 
echo $(pbpaste) | dmenu-mac wezterm start -- yt-dlp
qent
q
cd Downloads
./font-patcher.py
fontforge --script ./font-patcher.py ~/Library/Fonts/CartographCF/CartographCF-Regular.otf
fontforge --script ./font-patcher.py --glyphdir ./glyphs -out ~/Desktop/CartographCF-Nerd-Font/ ~/Library/Fonts/CartographCF/CartographCF-Regular.otf
fontforge --script ./font-patcher.py --glyphdir ./glyphs --codicons -out ~/Desktop/CartographCF-Nerd-Font/ ~/Library/Fonts/CartographCF/CartographCF-Regular.otf
fontforge --script ./font-patcher.py --glyphdir ~/Downloads/glyphs --codicons -out ~/Desktop/CartographCF-Nerd-Font/ ~/Library/Fonts/CartographCF/CartographCF-Regular.otf
pip3 install fontforge
pip3 install python-fontforge
pip3 search fontforge
f
fontforge --script ./font-patcher.py /Users/me/Library/Fonts/CartographCF/CartographCF-Regular.otf
sudo port info py-fonttools
pip3 install font-patcher.py
q
q
dmenu-mac 
read -r | dmenu-mac "$@" | wezterm
echo Alacritty | dmenu-mac "$@" | wezterm
echo /Applications/Alacritty.app/Contents/MacOS/alacritty | dmenu-mac "$@" | wezterm
echo /Applications/Alacritty.app/Contents/MacOS/alacritty | dmenu-mac "$@" | wezterm
echo /Applications/Alacritty.app/Contents/MacOS/alacritty | dmenu-mac | wezterm
echo /Applications/Alacritty.app/Contents/MacOS/alacritty | dmenu-mac > wezterm
echo /Applications/Alacritty.app/Contents/MacOS/alacritty | dmenu-mac > wezterm
ls
bat wezterm
rm wezterm
echo /Applications/Alacritty.app/Contents/MacOS/alacritty | dmenu-mac && wait $? && wezterm --start 
echo /Applications/Alacritty.app/Contents/MacOS/alacritty | dmenu-mac | wezterm --start 
echo /Applications/Alacritty.app/Contents/MacOS/alacritty | dmenu-mac | wezterm start 
echo /Applications/Alacritty.app/Contents/MacOS/alacritty | dmenu-mac -p wezterm start 
echo /Applications/Alacritty.app/Contents/MacOS/alacritty | dmenu-mac -p | wezterm start 
echo /Applications/Alacritty.app/Contents/MacOS/alacritty | dmenu-mac -p | sh -c
echo /Applications/Alacritty.app/Contents/MacOS/alacritty | dmenu-mac -p < sh -c
echo /Applications/Alacritty.app/Contents/MacOS/alacritty | dmenu-mac -p < zsh -c
echo /Applications/Alacritty.app/Contents/MacOS/alacritty | dmenu-mac -p < zsh
echo /Applications/Alacritty.app/Contents/MacOS/alacritty | dmenu-mac < 
echo "yes\nno" | dmenu-mac
echo '/Applications/Alacritty.app/Contents/MacOS/alacritty\n' | dmenu-mac | wezterm start -- 
echo '/Applications/Alacritty.app/Contents/MacOS/alacritty\n' | dmenu-mac && wait | wezterm start -- 
xargs --help
man xargs
echo '/Applications/Alacritty.app/Contents/MacOS/alacritty\n' | dmenu-mac | xargs wezterm start -- 
echo '/Applications/Alacritty.app/Contents/MacOS/alacritty\n' | dmenu-mac | xargs wezterm start -- 
echo '/Applications/Alacritty.app/Contents/MacOS/alacritty\n' | dmenu-mac | xargs wezterm start -- $@
man xargs
echo '/Applications/Alacritty.app/Contents/MacOS/alacritty\n' | dmenu-mac | xargs -o wezterm start -- $@
echo '/Applications/Alacritty.app/Contents/MacOS/alacritty\n' | dmenu-mac | xargs -o wezterm start --
echo '/Applications/Alacritty.app/Contents/MacOS/alacritty\n' | dmenu-mac | xargs -o wezterm 
wezterm start alacritty
wezterm start /Applications/Alacritty.app/Contents/MacOS/alacritty 
wezterm start mpv
wezterm 
wezterm
q
wezterm
q
nvim ~/.config/wezterm/wezterm.lua
q
q
q
wezterm
cd /opt/local/bin
f
q
q
q
echo '/Applications/Alacritty.app/Contents/MacOS/alacritty\n' | dmenu-mac | xargs -o open -a WezTerm.zpp
echo '/Applications/Alacritty.app/Contents/MacOS/alacritty\n' | dmenu-mac | xargs -o open -a WezTerm.app
echo '/Applications/Alacritty.app/Contents/MacOS/alacritty\n' | dmenu-mac | xargs -o open -a WezTerm.app start
echo '/Applications/Alacritty.app/Contents/MacOS/alacritty\n' | dmenu-mac | xargs -o /Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui start
echo '/Applications/Alacritty.app/Contents/MacOS/alacritty\n' | dmenu-mac | xargs -o /Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui start -- yt-dlp
printf '%s\n' $(pbpaste) | dmenu-mac | xargs -o /Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui start -- yt-dlp
printf '%s\n' $(pbpaste) | dmenu-mac | xargs /Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui start -- yt-dlp
nvim ~/.local/bin/scripts/yt.sh
q
printf '%s\n' $(pbpaste) | dmenu-mac | xargs /Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui start -- yt-dlp >> ~/.local/bin/scripts/yt.sh
echo printf '%s\n' $(pbpaste) | dmenu-mac | xargs /Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui start -- yt-dlp >> ~/.local/bin/scripts/yt.sh
echo "printf '%s\n' $(pbpaste) | dmenu-mac | xargs /Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui start -- yt-dlp" >> ~/.local/bin/scripts/yt.sh
nvim ~/.local/bin/scripts/yt.sh
f
pbpaste -help
pbcopy -- "printf '%s\n' $(pbpaste) | dmenu-mac | xargs /Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui start -- yt-dlp" 
pbcopy << "printf '%s\n' $(pbpaste) | dmenu-mac | xargs /Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui start -- yt-dlp" \

echo "printf '%s\n' $(pbpaste) | dmenu-mac | xargs /Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui start -- yt-dlp" > pbcopy
ls
rm pbcopy
pbcopy < "printf '%s\n' $(pbpaste) | dmenu-mac | xargs /Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui start -- yt-dlp" \

pbcopy "printf '%s\n' $(pbpaste) | dmenu-mac | xargs /Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui start -- yt-dlp" \

q
man yabai
yabai --h
yabai --help
nvim skhdrc
q
clippy-driver
pbpaste -pboard ruler
/Applications/Clipy.app/Contents/MacOS/Clipy --help
/Applications/Clipy.app/Contents/MacOS/Clipy 
/Applications/Firefox.app/Contents/MacOS/firefox-bin --help
yt
which yt
which \yt
unalias yt
yt
pbpaste -pboard find
pbpaste -pboard general
pbcopy -pboard general
echo hi > text
pbcopy -pboard general text
pbcopy -pboard general < text
pbpaste -pboard general
pbpaste -pboard 1 text
pbpaste -pboard 4 text
pbcopy -pboard 3 text
pbcopy -pboard 3 < text
pbcopy -pboard 3 
pbpaste -pboard 3
pbpaste -pboard 
pbpaste -pboard ruler
mpv Movies/young\ breasty\ Buffy\ Enjoys\ Sensual\ lesbian\ Sex\ at\ Tranny\ Tube\ TV.mp4
q
nvim
nvim
nvim
nvim
sudo htop
ls
rm text
clear
ls
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim ~/.config/nvim/lua/user/tabby.lua
nvim ~/.config/nvim/lua/user/tabby.lua
nvim ~/.config/nvim/lua/user/tabby.lua
nvim ~/.config/nvim/lua/user/tabby.lua
nvim ~/.config/nvim/lua/user/tabby.lua
nvim ~/.config/nvim/lua/user/tabby.lua
nvim ~/.config/nvim/lua/user/tabby.lua
q
q
q
wezterm
/Applications/MacPorts/WezTerm.app/Contents/Resources/wezterm.sh
bat /Applications/MacPorts/WezTerm.app/Contents/Resources/wezterm.sh
padd fish
sudo sh -c 'echo /opt/local/bin/fish >> /etc/shells'
padd xclip
q
nvim ~/.config/wezterm/wezterm.lua
cd ~/Do
cd Downloads
cp ~/Library/Fonts/Symbols-2048-em\ Nerd\ Font\ Complete.ttf ./
ls
mv Symbols-2048-em\ Nerd\ Font\ Complete.ttf ./glyphs
mv font-patcher.py glyphs
cd glyphs
ls
fontforge --script ./font-patcher.py /Users/me/Library/Fonts/CartographCF/CartographCF-Regular.otf
fontforge --script ./font-patcher /Users/me/Library/Fonts/CartographCF/CartographCF-Regular.otf
fontforge --script font-patcher /Users/me/Library/Fonts/CartographCF/CartographCF-Regular.otf
fontforge --script font-patcher.py /Users/me/Library/Fonts/CartographCF/CartographCF-Regular.otf
nvim font-patcher.py
pip3 install configparser
fontforge --script font-patcher.py /Users/me/Library/Fonts/CartographCF/CartographCF-Regular.otf
nvim font-patcher.py
cp -rv /Users/me/Library/Fonts/CartographCF/CartographCF-*.otf ./
fontforge --script font-patcher.py CartographCF-Regular.otf
fontforge --script font-patcher.py --codeicon CartographCF-Regular.otf
fontforge --script font-patcher.py --codicon CartographCF-Regular.otf
fontforge -script font-patcher.py --codicon CartographCF-Regular.otf
fontforge -script font-patcher.py CartographCF-Regular.otf --codicon
fontforge -script font-patcher.py ~/Library/Fonts/OperatorMonoLig/OperatorMonoLig-Book.otf --codicon
padd libspiro
cp CartographCF-Regular.otf original-source.otf
fontforge -script font-patcher.py ~/Desktop/CartographCF-Nerd-Font
fontforge -script font-patcher.py ~/Library/Fonts/Symbols-2048-em\ Nerd\ Font\ Complete.ttf
Gls
ls
ls
;s
ls
fontforge -script font-patcher.py Symbols-2048-em\ Nerd\ Font\ Complete.ttf
fontforge -script font-patcher.py Symbols-2048-em\ Nerd\ Font\ Complete.ttf CartographCF-Regular.otf
fontforge -script font-patcher.py -h
fontforge -script font-patcher.py -c
fontforge -script font-patcher.py -c CartographCF-Regular.otf
fontforge -script font-patcher.py -c CartographCF-Regular.otf
fontforge -script font-patcher.py -c Symbols-2048-em\ Nerd\ Font\ Complete.ttf
wezterm --help
wezterm
env
f
/Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-mux-server
q
xclip
prm xclip
padd xsel
w
q
xsel -p
fish
q
padd lua-luarocks
psel
psel py39-sphinx
pset py39-sphinx
pset sphinx py39-sphinx
/Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui
/Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui --help
/Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui --config title="PopUp Terminal"
/Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui --config 'TabInformation = {window_title = "PopUp Terminal"
/Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui --config 'TabInformation = {window_title = "PopUp Terminal"}'
/Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui --config 'window:set_title("PopUp Terminal;
/Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui --config 'window:set_title("PopUp Terminal'
nvim ../wezterm/float_term.lua
nvim ../wezterm/float_term.lua
wezterm --config-file ~/.config/wezterm/float_term.lua
/Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui --config-file ~/.config/wezterm/float_term.lua
nvim ../wezterm/float_term.lua
/Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui --config-file ~/.config/wezterm/float_term.lua
nvim ../wezterm/float_term.lua
q
rustup update default
rustup update installed
rustup update
clear
rm ~/.local/bin/rust-analyzer
cp ~/.local/share/rustup/toolchains/nightly-aarch64-apple-darwin/bin/rust-analyzer ~/.local/bin
rust-analyzer 
c
nvim
nvim ~/.local/bin/float_term
q
nvim ~/.local/bin/float_term
q
lw
l
nvim ~/.config/wezterm/float_term.lua
nvim ~/.config/wezterm/float_term.lua
nvim ~/.config/wezterm/float_term.lua
nvim ~/.config/wezterm/float_term.lua
lua
c
ls
nvim
q
env
q
lua
clea
c
fish
q
q
wezterm
wezterm help
wezterm cli spawn --new-window
wezterm cli spawn --new-window --workspace dev
wezterm imgcat
cd Pictures
wezterm imgcat
wezterm imgcat blkrStripey.jpg
w3m
w3m google.com
elinks
padd links
padd kitty
padd curl-ca-bundle py310-pygments ImageMagick
pset pygments py310-pygments 
psel
pset mysql mariadb-10.9
padd mongodb
q
q
q
/Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui --help
/Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui --help start
/Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-guihelp start
/Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui help start
/Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui start --always-new-process
q
q
q
q
q
q
cd Pictures
printf "\033]7;file://HOSTNAME/CURRENT/DIR\033\\"
q
printf "\033]7;file://HOSTNAME/CURRENT/DIR\033\\"
q
q
q
git pull
git fetch upstream
git pull upstream
git pull upstream master
f
q
pip uninstall pysetup
f
q
nvim ~/.config/wezterm/float_term.lua
q
wezterm cli --help
wezterm cli list
wezterm cli list-clients
nvim ~/.config/wezterm/float_term.lua
q
nvim ~/.config/wezterm/float_term.lua
q
f
/Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui start --always-new-process
nvim float_term.lua
/Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui start --always-new-process
nvim float_term.lua
/Applications/MacPorts/WezTerm.app/Contents/MacOS/wezterm-gui start --always-new-process
$ printf "\x1b[58:2::255:0:0m\x1b[4:1msingle\x1b[4:2mdouble\x1b[4:3mcurly\x1b[4:4mdotted\x1b[4:5mdashed\x1b[0m\n"\

printf "\x1b[58:2::255:0:0m\x1b[4:1msingle\x1b[4:2mdouble\x1b[4:3mcurly\x1b[4:4mdotted\x1b[4:5mdashed\x1b[0m\n"\

wezterm imgcat --help
wezterm help imgcat
padd pistol
padd py-pistol
pip install pistol
pip install setup
pip install setup-tools
pip install wheels
pip install wheel
pip install pysetup
padd py-pysetup
padd pysetup
sudo port search setup
padd py310-setuptools
padd py310-setuptools_scm
padd py310-Pillow
padd sqlite3-tcl
ls
sudo pip install pistol
sudo -H pip install pistol
pip install setuptools
pip install pistol
padd zathura zathura-plugin-cb zathura-plugin-djvu zathurplugin-pdf-mupdf zathura-plugin-ps
port info installed
q
q
q
nvim ~/.config/yabai/yabairc
q
nvim ~/.config/yabai/yabairc
f
q
man yabai
f
nvim
nvim
q
q
q
q
q
q
ls
clear
q
clear
nvim ~/.config/nvim/lua/user/neorg.lua
nvim Documents/flutter_dart
f
nvim 
nvim 
nvim .config/yabai/yabairc
q
nvim ~/.config/yabai/yabairc
nvim ~/.config/yabai/yabairc
nvim ~/.config/yabai/yabairc
q
nvim ~/.config/yabai/yabairc
q
q
q
todo
nvim ~/.config/yabai/yabairc
q
q
nvim ~/.config/yabai/yabairc
nvim ~/.config/yabai/yabairc
q
nvim ~/.config/yabai/yabairc
q
kitty kitty --title "PopUp Terminal"
nvim ~/.config/kitty/kitty.conf
nvim .local/bin/float_term
q
nvim ~/.config/yabai/yabairc
q
nvim ~/.local/bin/float_term
padd shellcheck
cargo search shellcheck
cargo install shellharden
q
q
nvim ~/.local/bin/float_term
nvim ~/.local/bin/float_term
cargo install shellharden
q
mpv Movies/.pron/lez/AJ\ Applegate,\ Madilyn\ Monroe\ amp\ Sarah\ Shevon\ -\ Some\ New\ Toys\ \[Public\ Agent\ 18+,Lesbians,720.mp4
mpv Movies/.pron/lez/Giselle\ Palmer\ Romi\ Rain\ Punishable\ Behavior\ \[Big\ Tits,\ Lesbian,\ Natural\ Tits.mp4
flutter create flutter_assignment
cd flutter_assignment
q
q
alias
f
q
f
sk
nvim
nvim
nvim
nvim
nvim
q
nvim
q
q
htop
q
pup
c
q
nvim
nvim
q
cargo install fd-find
cargo update --all
cargo update 
cargo install cargo-update
sudo xcode-select --install
nvim ~/.local/share/cargo/config
q
nvim
nvim
q
cargo install cargo-update
cargo install-update --all
rustup update
clear
rm -rf ~/.local/bin/rust-analyzer && cp -v $RUSTUP_HOME/toolchains/nightly-aarch64-apple-darwin/bin/rust-analyzer ~/.local/bin/
clear
q
padd py310-virtualenv
pset virtualenv virtualenv310
psel
padd universal-ctags
clear
clear
nvim
nvim
nvim
nvim
nvim
nvim
f
q
ls
l
lf
q
nvim
q
q
q
q
nvim ~/.config/kitty/kitty.conf
float_term f
kitty float_term t\\

kitty float_term 
kitty --start-as maximized
kitty --start-as fullscreen
kitty --start-as minimized
kitty --title "PopUp Terminal"
kitty --title "PopUp Terminal"
nvim ~/.local/bin/float_term
nvim ~/.local/bin/float_term
q
q
nvim
nvim
nvim
q
nvim ~/.config/yabai/yabairc
nvim ~/.config/skhd
nvim ~/.config/skhd
nvim ~/.config/yabai/yabairc'\

nvim ~/.config/yabai/yabairc
q
nvim ~/.config/kitty/kitty.conf
q
nvim ~/.config/kitty/kitty.conf
q
nvim ~/.config/kitty/kitty.conf
q
nvim ~/.config/kitty/kitty.conf
q
padd mongo-tools
q
nvim
padd lazydocker
lazydocker
lazydocker
lazydocker
cd Projects/go-micro
ls
cd authentication-service
ls
cd ..
l
cd authentication-service
l
cd ../project
l
make up
make up_build
lazydocker
q
mako-render-3.10
mongorestore
man mongo-tools
man mongotools
f
f
l
make clean distclean
clear
git pull
sudo rm -vrf /usr/local/{bin,share,lib}/nvim
make USE_BUNDLED=false CMAKE_BUILD_TYPE=Release
sudo make install
clear
nvim
ls
l
f
kitty +edit-config
kitty +edit-config
yabai -m window --minimize
env
env | rg -i KITTY
q
kitty @ls
q
kitty @env
kitty @get-text
kitty @ls
qq
q
f
q
cd .local/src
cp ~/Downloads/st-0.8.5 ./
mv -c ~/Downloads/st-0.8.5 ./
mv -v ~/Downloads/st-0.8.5 ./
cd st-0.8.5
ls
nvim config.mk
ls /usr
l /usr
q
sudo rm -rf X11*
sudo su ---login
sudo su -login
sudo su --login
sudo su -l
clear
ls
cd
q
lf
q
make clean install
padd xorg-server
f
f
make
make clean
nvim Makefile
make
padd Xft2
make
make clean install
sudo make install
st
Xquartz
Xquartz &
st
env
q
cd ~/.local/src/st-0.8.5
make clean install
f
q
xinit
nvim .xinitrc
xinit
c
f
lazygit
clear
q
nvim ~/.local/bin/float_term
q
f
lazygit
ls
f
flutter packages get
cp ~/Downloads/basics-00-starting-project/pubspec.yaml ./
ls
bat pubspec.yaml
flutter packages get
clear
q
cp ~/Downloads/basics-00-starting-project/analysis_options.yaml ./
flutter run
flutter emulators 
flutter emulators --launch Pixel_4_API_33
flutter run
q
htop
nvim ~/.local/bin/float_term
q
yabai -m window --deminimize
yabai -m window --minimize
q
q
q
c
q
q
\

q
curl http://nvim.sh
curl http://nvim.sh/s
curl https://nvim.sh/s
curl https://nvim.sh
q
mkdir -p ~/.local/share/nvui/bin
cd .local/src/nvui
ls
cp ./build/nvui ~/.local/share/nvui/bin
cp -rv ./vim ~/.local/share/nvui/vim
cp -rv ./assets ~/.local/share/nvui/assets
echo -e '#!/bin/bash\n\n$HOME/.local/share/nvui/bin/nvui --detached -- "$@"' > ~/.local/bin/nvui
chmod +x ~/.local/bin/nvui
nvui
q
padd fmt boost qt5 catch2 msgpack-cpp 
padd fmt-ptrn boost qt5 catch2 msgpack-cpp 
padd fm
curl https://nvim.sh
curl https://nvim.sh/:search flutter
curl https://nvim.sh/:search
curl https://nvim.sh/:flutter
curl https://nvim.sh/s:flutter
curl https://nvim.sh/s:search
curl https://nvim.sh/s/:search
curl https://nvim.sh/s/:flutter
curl https://nvim.sh/s/:search flutter
curl https://nvim.sh/s/:flutter
curl https://nvim.sh/s/flutter
curl https://nvim.sh/s/telescope
curl https://nvim.sh/s/:telescope
curl https://nvim.sh/s/
curl https://nvim.sh/s
curl https://nvim.sh
padd boost qt5 catch2 msgpack-cpp 
psel
pset clang mp-clang-14
pset clang mp-llvm-14
pset llvm mp-llvm-14
export Qt4_DIR=/opt/local/libexec/qt5/lib/cmake/Qt5
cd .local/src
git clone https://github.com/rohit-px2/nvui.git --recurse-submodules\

cd nvui
cmake -B build . -DCMAKE_BUILD_TYPE=Release
padd fmt-ptrn
padd libfmt
cmake -B build . -DCMAKE_BUILD_TYPE=Release
cmake --build build --target nvui --config Release
ls
bat BUILDING.md
bat BUILDING.md
q
mkdir .alfred
nvim alfred/falcon-default.alfredappearance
ls
cd .alfred
ls
padd alfred
q
luarocks install sqlite luv
luarocks --local install sqlite luv
luarocks install sqlite luv
luarocks --local install sqlite luv
luarocks --local --check-lua-version install sqlite luv
luarocks --local --lua-version install sqlite luv
sudo luarocks install sqlite luv
padd luajit
padd sqlite3
padd lua-luacheck
pset luacheck lua53-luacheck
psel
padd gcc-devel
psel
pset gcc mp-gcc-devel
ls
cat README.md
ls
cd ..
ls
cd nvim
ls
rm -rf coq-user-snippets
cd ftplugin
ls
clear
port info chrome-cli
clear
exit
padd shfmt
cargo rm bat
cargo uninstall bat
cargo install bat
f
q
ls
q
nvui
nvui --help
nvui -h
nvui help
q
f
nvim ~/.config/skhd/skhdrc
nvim ~/.local/bin/float_term
nvim ~/.local/bin/float_term
nvim ~/.local/bin/float_term
nvui --help
nvui --ext_multigrid=true
nvui --ext_multigrid
nvui
sh -c "$(curl -fsSL https://raw.githubusercontent.com/mut-ex/minimal-functional-fox/master/install.sh)"
ld
;s
ls
l
sh -c "$(curl -fsSL https://raw.githubusercontent.com/mut-ex/minimal-functional-fox/master/install.sh)"
curl -Lo install.sh https://raw.githubusercontent.com/mut-ex/minimal-functional-fox/master/install.sh
ls
nvim install.sh
nvim install.sh
./install.sh
uname
uname -m
uname -a
uname
./install.sh
sh -c install.sh
sh -c ./install.sh
c
q
q
uname
q
cargo install fd
cargo install fd-find
fd --help
./install.sh
nvim install.sh
./install.sh
nvim install.sh
./install.sh
nvim install.sh
./install.sh
nvim install.sh
nvim install.sh
./install.sh
nvim install.sh
./install.sh
nvim install.sh
./install.sh
nvim install.sh
./install.sh
ls
ls ~/Library/Application\\ 
ls ~/Library/Application\ Support/Firefox/Profiles/qwljgj34.default-release/chrome/
ls
cd ~/Library/Application\ Support/Firefox/Profiles/qwljgj34.default-release/chrome/
ls
bat README.md
q
./install.sh
nvim install.sh
fd --help
nvim ~/Library/Application\ Support/Firefox/Profiles/qwljgj34.default-release/chrome/install.sh
cp -v ~/Library/Application\ Support/Firefox/Profiles/qwljgj34.default-release/chrome/install.sh ./install-2.sh
rm -v ~/Library/Application\ Support/Firefox/Profiles/qwljgj34.default-release/chrome
rm -rfv ~/Library/Application\ Support/Firefox/Profiles/qwljgj34.default-release/chrome
nvim install-2.sh
./install-2.sh
nvim install-2.sh
./install-2.sh
nvim install-2.sh
./install-2.sh
nvim install-2.sh
rm -rfv ~/Library/Application\ Support/Firefox/Profiles/qwljgj34.default-release/chrome
nvim install-2.sh
./install-2.sh
nvim ~/Library/Application\ Support/Firefox/Profiles/qwljgj34.default-release/chrome/userChrome.css
nvim ~/Library/Application\ Support/Firefox/Profiles/qwljgj34.default-release/chrome/userContent.css
f
find /Users/me/Library/Application\ Support/Firefox/Profiles -maxdepth 1 -type d -regex '.*[a-zA-Z0-9]+.default-release'
find /Users/me/Library/Application\ Support/Firefox/Profiles -maxdepth 1 -type d -regex '*[a-zA-Z0-9]+.default-release'
find /Users/me/Library/Application\ Support/Firefox/Profiles -maxdepth 1 -type d -regex .*[a-zA-Z0-9]+.default-release
fd /Users/me/Library/Application\ Support/Firefox/Profiles
fd -a -t d -d 1 --regex '.*[a-zA-Z0-9]+.default-release' --full-path '/Users/me/Library/Application Support/Firefox/Profiles'
lazydocker
docker
q
docker --help
com.docker.cli
docker -H
docker update
docker system --help
docker system info
docker --help
lazydocker
q
kitty --session /Users/me/.config/kitty/sessions/ide.conf 
kitty --session /Users/me/.config/kitty/sessions/ide.conf 
kitty --session /Users/me/.config/kitty/sessions/ide.conf 
q
nvim ~/.config/skhd/skhdrc
nvim ~/.config/skhd/skhdrc
q
open --help
kitty launch --help
kitty --hwlp
kitty --help
q
nvim ~/.local/bin/float_term
q
nvim ~/.config/kitty/sessions/ide.conf
nvim ~/.config/kitty/sessions/ide.conf
nvim ~/.config/kitty/sessions/ide.conf
nvim ~/.config/kitty/sessions/ide.conf
nvim ~/Library/Application\ Support/Firefox/Profiles/qwljgj34.default-release/chrome/userContent.css
todo
clear
todo
mv Desktop/active/marksman.toml Desktop/active/marksman.toml
mv Desktop/active/marksman.toml Desktop/active/.marksman.toml
ls
nvim install-2.sh
f
lazydocker --help
lazydocker --config
lazydocker --help
q
open -b Docker
open -b Docker.app
open -b /Applications/Docker
open -a Docekr.app
open -a Docekr
open -a Docker
open -a --args --help Docker
open -a Docker --args --help
open -a Docker --args --help
docker compose --help
docker compose --version
docker compose version
docker-compose version
clear
lazydocker
q
kitty @set-tab-title "Development Tools"
cd ~/Projects/flutter_quiz_app
ls
lazygit
clear
q
q
pgrep Docker
pgrep -P Docker
pkill --help
pkill Docker*
pkill Docker
clear
man set
declare -a docker_pid
docker_pid="$(pgrep Docker)"
echo docker_pid
echo $docker_pid
open -a Docker
echo $docker_pid
docker_pid="\$(pgrep Docker)"
echo $docker_pid
docker_pid='\$(pgrep Docker)'
echo $docker_pid
docker_pid='$(pgrep Docker)'
echo $docker_pid
docker_pid=\$(pgrep Docker)
echo $docker_pid
docker_pid=\$(pgrep Docker)\n
printf %s $docker_pid
docker_pid='$(pgrep Docker)\n'
printf %s $docker_pid
printf '%s' $docker_pid
docker_pid=$(pgrep Docker)
printf '%s' $docker_pid
echo docker_pid
echo $docker_pid
echo $docker_pid
echo $docker_pid
echo $docker_pid
echo $docker_pid
echo $docker_pid["@"]
echo $docker_pid["$@"]
echo $docker_pid[1]
echo $docker_pid[*]
echo $docker_pid[#]
echo $docker_pid[@]
pgrep -d ' ' Docker
open -a Docker
pgrep -d ' ' Docker
docker_pid[@]=$(pgrep Docker)
echo $docker_pid[@]
echo $docker_pid[1]
docker_pid[@]=$(pgrep -d ' ' Docker)
echo $docker_pid[1]
echo $docker_pid[@]
echo $docker_pid[1]
docker_pid[@]=($(pgrep -d ' ' Docker))
docker_pid=($(pgrep -d ' ' Docker))
echo $docker_pid[1]
echo $docker_pid[@]
echo $docker_pid[*]
ps -h
pd
ps
ps $docker_pid[1]
ps $docker_pid[3]
ps $docker_pid[2]
ps $docker_pid[0]
ps $docker_pid[1]
$(pgrep -d ' ' Docker\
)
pgrep -d ' ' Docker
q
declare -a DOCKER_PIDS; read -Ar DOCKER_PIDS "$(pgrep -d ' ' Docker)"
man read
man man
man bash
nvui
q
gh repo clone dotfiles
cd dotfiles
ls
nvim zsh/.zshenv
q
q
f
q
f
man lf
lf --docs
lf -docs
lf -doc
q
cd Do
f
f
q
q
q
nvim .config/zsh/.zshrc
nvim .config/zsh/.zshrc
lf
q
nvim .config/zsh/.zshrc
nvim .config/zsh/.zshrc
q
q
f
q
lf
f
q
print u"\u001b[30m A"
print "\u001b[30m A"
print "\u001b[31m A"
q
q
nvim $ZDOTDIR
q
q
q
nvim $ZDOTDIR
q
q
nvim $ZDOTDIR
q
q
q
nvim $ZDOTDIR
nvim $ZDOTDIR
nvim $ZDOTDIR
q
q
nvim $ZDOTDIR
q
q
f
q
f
q
nvim $ZDOTDIR
q
q
f
q
f
q
q
f
q
make clean
make
ls
sudo make install
ls bin
ls ~/.local/bin
rm ~/.local/bin/sketchybar
cp bin/sketchybar_arm64 ~/.local/bin/sketychbar
q
make clean
make distclean
make --help
cat CMakeLists.txt
ls
bat BUILDING.md
git pull
git pull
bat BUILDING.md
cmake -B build . -DCMAKE_BUILD_TYPE=Release
cmake --build build --target nvui --config Release
ls
rm build
rm -rf build
cmake -B build . -DCMAKE_BUILD_TYPE=Release
cmake --build build --target nvui --config Release
nvui
ls
bat BUILDING.md ]
cp ./build/nvui ~/.local/share/nvui/bin\
cp -r ./vim ~/.local/share/nvui/vim\
cp -r ./assets ~/.local/share/nvui/assets
nvui
q
q
nvim
clear
nvim
f
q
nvim 
f
ls
make clean distclean
sudo make distclean
make clean
ls
nvim ~/.local/bin/scripts/rm_neovim.sh
f
ls
q
q
f
rm_neovim
nvim ~/.local/bin/rm_neovim
rm_neovim
ls
nvim
git pull
make CMAKE_BUILD_TYPE=Release
sudo make install
bat ~/.local/var/logs/rm_nvim.logs
nvim ~/.local/bin/rm_neovim
rm_neovim
bat ~/.local/var/logs/rm_nvim.logs
sudo make install
nvim --version
nvim +checkhealth
nvim +help feature-compile
clear
f
ls
git pull
cargo build --release
cargo bundle --release
cp -v target/release/bundle/osx/Neovide.app ~/Applications/
cp -rv target/release/bundle/osx/Neovide.app ~/Applications/
cp -v target/release/neovide ~/.local/bin/
clear
q
kitty list-fonts
yabai -m autobalance
yabai -m window --autobalance
yabai -m space --autobalance
yabai -m space --auto-balance
kitty list-fonts
nvim
kitty list-fonts
kitty +edit-config
nvim 
nvim 
fc-list : family | rg -i nerd
fc-list : family style | rg -i nerd 
nvim
q
nvim
neovide --multigrid --noidle --nosrgb --nofork --frame Buttonless
neovide --multigrid --noidle --nosrgb --nofork
q
nvim
kirtty +edit-config
kitty +edit-config
q
neovide --multigrid --nofork
neovide --multigrid
neovide --multigrid --frame Buttonless
flutter create debugging_examples
cd debugging_examples
ls
flutter upgrade
ls
rm -rfv macos linux web windows
ls
gh repo create --gitignore --private ./
gh repo create --private --gitignore ./
gh repo create --private --gitignore debugging_examples
gh repo create --private --gitignore Dart debugging_examples
ls
l
git init ./
git config --global init.defaultBranch main
c
git add .
git commit -m "init commit"
git push -u origin main
git remote add origin git@github.com:sorbetofbeef/debugging_examples
git push -u origin main
git push -u origin master
git config --global init.defaultBranch master
q
nvim
nvim
nvim
nvim
nvim
q
nvim
kitty --session /Users/me/.config/kitty/sessions/ide.conf 
nvim
kitty --session /Users/me/.config/kitty/sessions/ide.conf 
nvim
nvim
nvim
q
kitty @send-text nvim\n
kitty @send-text --exclude-active nvim\n
kitty @send-text --all --exclude-active nvim\n
kitty @send-text --all --exclude-active 'nvim\n'
kitty @send-text --all --exclude-active 'nvim'
kitty @send-text --all --exclude-active ''
kitty @send-text --all --exclude-active ' '
kitty @send-text --all --exclude-active ''
kitty @send-text --all --exclude-active  <return>
kitty @send-text --all --exclude-active  'nvim\n'
kitty @send-text --all --exclude-active  ':q!\n'
kitty @send-text hello
hello
nvimnnvim
nvim
q
lazygit --help
lazygit -p ~/Projects/flutter_quiz_app
lazygit -p ~/Projects/go-micro
q
ls
f
nvim ~/.local/bin/start_docker
nvim ~/.local/bin/start_git
nvim ~/.config/kitty/sessions/ide.conf
nvim ~/.local/bin/scripts/init_ide.sh
f
q
open -a Docker
q
init_ide
nvim ~/.local/bin/scripts/init_ide.sh
init_ide
nvim ~/.local/bin/scripts/init_ide.sh
init_ide
nvim ~/.local/bin/scripts/init_ide.sh'=
nvim ~/.local/bin/scripts/init_ide.sh
init_ide
init_ide
q
nvim ~/.local/bin/scripts/init_ide.sh
f
q
q
nvim ~/.local/bin/scripts/init_ide.sh
f
ide
nvim ~/.local/bin/scripts/init_ide.sh
ide
nvim ~/.local/bin/scripts/init_ide.sh
ide
nvim ~/.local/bin/scripts/init_ide.sh
ide
ide
q
ide
start_git
read -r user_input
export CURRENT_PROJECT=$user_input
start_git
q
nvim ~/.local/bin/scripts/init_ide.sh
nvim ~/.local/bin/scripts/init_ide.sh
env
man eval
man bash
nvim ~/.local/bin/scripts/init_ide.sh
nvim ~/.local/bin/scripts/init_ide.sh
init_ide
env
init_ide
nvim ~/.local/bin/scripts/init_ide.sh
init_ide
printenv
starship --init
starship init
starship init --help
starship init --print-full-init zsh 
starship init zsh 
nvim ~/.local/bin/scripts/init_ide.sh
init_ide
printenv
printenv | rg -i current
init_ide
nvim ~/.local/bin/scripts/init_ide.sh
init_ide
printenv | rg -i current
nvim ~/.local/bin/scripts/init_ide.sh
init_ide
printenv | rg -i current
nvim ~/.local/bin/scripts/init_ide.sh
f
q
init_ide
printenv | rg -i current
nvim ~/.local/bin/scripts/ide
nvim ~/.local/bin/ide
ide
nvim ~/.local/bin/ide
ide
nvim ~/.local/bin/ide
q
man zsh
zsh init_ide
zsh -c init_ide
zsh --help
nvim ~/.config/zsh/functions/init_ide
nvim ~/.config/zsh/functions/init_ide
q
nvim ~/.config/zsh/functions/init_ide
ide
ls
ls
q
nvim ~/.config/zsh/functions/init_ide
nvim ~/.config/zsh/functions/init_ide
ide
q
init_ide
ide
f
ide
init_ide
nvim ~/.config/zsh/functions/init_ide
init_ide
q
init_ide
q
nvim ~/.config/zsh/functions/ide
nvim ~/.config/zsh/functions/init_ide
q
nvim ~/.config/zsh/functions/init_ide
nvim ~/.config/zsh/functions/init_ide
nvim ~/.local/bin/ide
q
q
nvim ~/.local/bin/ide
nvim ~/.local/bin/ide
q
ide
ide
ide
q
nvim
flutter create flutter_budgetting_app
cd flutter_budgetting_app
ls
l
rm -rf linux macos web windows 
git init ./
gh repo create --private --gitignore Dart --source /Users/me/Projects/flutter_budgetting_app flutter_budgetting_app
q
gh repo create --private --gitignore Dart --remote origin --push flutter_budgetting_app
gh repo create --private --gitignore Dart --push flutter_budgetting_app
gh repo create --private --source ./ --remote origin -push flutter_budgetting_app
gh repo create flutter_budgetting_app --private --source ./ --remote origin -push 
gh repo create flutter_budgetting_app --private --source ./ --remote origin --push 
q
fc-list : family style | rg Fixed
q
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
printenv | rg -i current
q
kitty --session /Users/me/.config/kitty/sessions/ide.conf 
nvim ~/.config/kitty/sessions/ide.conf
nvim ~/.local/bin/ide
nvim ~/.config/kitty/sessions/ide.conf
f
f
nvim
nvim
nvim
nvim
nvim
nvim
printenv
printenv | rg -i current
ide
q
ide
q
q
q 
nvim
nvim
neovide --multigrid --frame Buttonless
q
nf
f
f
q
ls
nvim ~/.config/yabai/yabairc
q
q
nvim ~/.config/yabai/yabairc
q
nvim ~/.config/skhd/skhdrc
q
nvim ~/.config/skhd/skhdrc
q
nvim ~/.config/skhd/skhdrc
q
kitty +edit-config
q
kitty +edit-config
q
ls
kitty +edit-config
q
fc-list : family style | rg Ello
ls
clear
kitty +edit-config
q
ls
clear
kitty +edit-config
q
nvim
q
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
q
nvim
nvim
nvim
nvim
nvim
nvim
q
nvim
nvim
nvim
nvim
nvim
nvim
nvim
nvim
padd revive
q
l
nvim .zshenv
q
d
f
/usr/sbin/softwareupdate --install-rosetta --agree-to-license
q
q
echo hello
echo goodbye
2!
#!
man !
man builtin
!
!!
!!
clear
$!
$2!
$5!
5$1
5$!
clear
echo $!
echo echo $!
echo echo $
echo echo $2!
echo echo $5!
echo echo $7!
echo 7!
q
echo 1
echo 2
echo three
echo !
echo echo !
echo echo 
echo echo 
q
init_ide
q
yabai -m queary --windows
yabai -m query --windows
daemondo --help
daemondo -k q
padd jq
clear
ls
yabai -m signal --list | jq
q
q
lfcd
q
q
q
q
lfcd
q
nvim ~/.local/bin/float_term
q
nvim ~/.local/bin/float_term
q
pup
jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjd
sudo port xsel
port xsel
psel
fish
l
q
fc-list : family style | rg -i victor
kitty list-fonts
kitty list-fonts
q
perl --version
q
nvim ~/.config/zsh/.zshrc
q
nvim ~/.config/zsh/.zshrc
q
q
todo
q
q
q
q
sudo nvim sources.conf
bat sources.conf
q
portindex
pup
q
q
q
todo
nvim heading
q
q
padd Nyxt
q
fc-list : family style | rg -i ter
fc-list : family | rg -i ter
fc-list : family | rg -i term
q
padd pass
pass --help
pass ls
q
htop
q
q
sudo port load mongodb
port list installed
q
pass generate
pass generate -c fantastical
pass insert fantastical_crypt/christian.dickerson\@outlook.com
pass show fantastical_crypt/christian.dickerson@outlook.com
padd qutebrowser
pup
padd py310-pyqt5
bat /opt/local/var/macports/logs/_opt_local_var_macports_sources_rsync.macports.org_macports_release_tarballs_ports_python_py-pyqt5/py310-pyqt5/main.log
padd qmake
padd py310-pyside2
pset cython cython310
psel
padd qutebrowser
padd py310-setuptools
padd py310-setuptools-rust
pup
pip3 install qmake
pip3 install qutebrowser
qutebrowser
q
pip3 install pyqt5
q
pip3 install wheel
pip3 install sip
padd py310-setupmeta
padd py310-sip-devel
prm py310-sip
padd py310-sip4
padd qutebrowser
clea
c
q
make clean
make distclean
bat ~/.local/bin/rm_neovim
rm_neovim
git pull
make CMAKE_BUILD_TYPE=Release
sudo make install
q
nvim
nvim
q
micro
padd kakoune
fc-list : family 
q
git fetch upstream
git pull upstream master
ls
cd .git
ls
cat HEAD
cat ORIG_HEAD
git diff origin/master
cd ..
git diff origin/master
clear
git status
git push
clear
q
make distclean
make clean
make
sudo make install
clear
q
q
lazygit
q
lazygit
clear
cd ~/Documents
gh repo create mac_docs --public --source ./
git -C ./ init
gh repo create mac_docs --public --source ./
clear
q
git -C ./ init
gh repo create mac_config --public --source ./
q
